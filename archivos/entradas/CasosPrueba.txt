program{
    i32 i,a,x;

    for ( i =: 3 ; i < 10 ; +1){
        i=:0;
    };
    while ( i < 10 ) : ( i =: i + 1 ) {
    };
    while ( i < 10 ) : (i =: i + 1 ) 
        i=:10;
    e: while ( i < 10 ) : (i =: i + 1 ) {
    };
    p: while ( i < 10 ) : (i =: i + 1 ) 
        i=:10;

    fun b(i32 i): f32 {
        while ( i < 10 ) : (i =: i + 1 ) {
        };
        while ( i < 10 ) : (i =: i + 1 ) 
            i=:10;
        e: while ( i < 10 ) : (i =: i + 1 ) {
        };
        p: while ( i < 10 ) : (i =: i + 1 ) 
            i=:10;
        return (8.0);      
    };       
    
    for ( i =: 3 ; i < 10 ; +1)
        i=:10;
    etiqueta: for ( i =: 3 ; i < 10 ; +1){
                 
    };
    etiq: for ( i =: 3 ; i < 10 ; +1)
        i=:10;           
    fun g(i32 i): f32 {
        for ( i =: 3 ; i < 10 ; +1){
               out(`test`);  
        };
        for ( i =: 3 ; i < 10 ; +1)
            i=:10;
        etiqueta: for ( i =: 3 ; i < 10 ; +1){
            continue: etiqueta;
            break;
            break 2;
        };
        etiq: for ( i =: 3 ; i < 10 ; +1)
            i=:10; 

        if (a<x) then{

        }else{

        }end_if;

        if (a<x) then{

        }end_if;

        if (a<x) then
            a=:x;
        else
            x=:a;
        end_if;
        return (9.0);

        fun c(i32 l,i32 b): f32 {
            const a=:8, x=:62;
            if (a<x) then{

            }else{
                when (a<x) then{
        
                };
                when (a<x) then
                    l=:x;
                fun c(): f32 {
                    when (a<x) then{
                    
                    };
                    when (a<x) then
                        l=:x;
                    return (0.0);        
                };
            }end_if;

            if (a<x) then{

            }end_if;

            if (a<x) then
                l=:x;
            else
                b=:a;
            end_if; 
            return (0.6);      
        };
        return (2.0);

    };
}