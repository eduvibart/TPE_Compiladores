   0  $accept : program $end

   1  program : nombre_program LLAVE_A bloque_sentencias LLAVE_C

   2  nombre_program : ID

   3  bloque_sentencias :
   4                    | bloque_sentencias sentencia PUNTOCOMA

   5  sentencia : sentencia_declarativa
   6            | sentencia_ejecutable

   7  sentencia_declarativa : sentencia_decl_datos
   8                        | sentencia_decl_fun
   9                        | lista_const

  10  sentencia_decl_datos : ID list_var

  11  list_var : list_var COMA ID
  12           | ID

  13  sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C
  14                     | FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C
  15                     | FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C

  16  retorno : RETURN PARENT_A expresion PARENT_C PUNTOCOMA

  17  parametro : ID ID

  18  cuerpo_fun :
  19             | cuerpo_fun bloque_sentencias retorno

  20  lista_const : CONST lista_asignacion

  21  lista_asignacion : lista_asignacion COMA asignacion
  22                   | asignacion

  23  sentencia_ejecutable : asignacion
  24                       | sentencia_if
  25                       | sentencia_out
  26                       | sentencia_when
  27                       | sentencia_for
  28                       | sentencia_while

  29  asignacion : ID ASIG expresion

  30  expresion : expresion SUMA termino
  31            | expresion RESTA termino
  32            | termino
  33            | llamado_func
  34            | sentencia_for
  35            | sentencia_while

  36  termino : termino MULT factor
  37          | termino DIV factor
  38          | factor

  39  factor : RESTA cte
  40         | ID
  41         | cte

  42  cte : I32
  43      | F32

  44  sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF
  45               | IF PARENT_A condicion PARENT_C THEN bloque_ejecutable END_IF

  46  condicion : expresion comparacion expresion

  47  comparacion : IGUAL
  48              | MAYOR
  49              | MENOR
  50              | MENORIGUAL
  51              | MAYORIGUAL

  52  bloque_ejecutable :
  53                    | LLAVE_A bloque_ejecutable sentencia_ejecutable PUNTOCOMA LLAVE_C

  54  sentencia_out : OUT PARENT_A CADENA PARENT_C

  55  sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C

  56  sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C

  57  bloque_break_continue :
  58                        | bloque_break_continue ejecutables_break_continue PUNTOCOMA

  59  ejecutables_break_continue : asignacion
  60                             | sentencia_if_break
  61                             | sentencia_out
  62                             | sentencia_when
  63                             | sentencia_while
  64                             | sentencia_for
  65                             | CONTINUE tag
  66                             | BREAK
  67                             | BREAK cte

  68  tag :
  69      | DOSPUNTOS ID

  70  sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF
  71                     | IF PARENT_A condicion PARENT_C THEN bloque_break_continue END_IF

  72  sentencia_for : FOR PARENT_A encabezado_for PARENT_C LLAVE_A bloque_break_continue LLAVE_C

  73  encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA SUMA ID
  74                 | asignacion PUNTOCOMA comparacion PUNTOCOMA RESTA ID

  75  list_param_real : list_param_real COMA ID
  76                  | list_param_real COMA cte
  77                  | cte
  78                  | ID

  79  llamado_func : ID PARENT_A list_param_real PARENT_C
  80               | ID PARENT_A PARENT_C

state 0
	$accept : . program $end  (0)

	ID  shift 1
	.  error

	program  goto 2
	nombre_program  goto 3


state 1
	nombre_program : ID .  (2)

	.  reduce 2


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	program : nombre_program . LLAVE_A bloque_sentencias LLAVE_C  (1)

	LLAVE_A  shift 4
	.  error


state 4
	program : nombre_program LLAVE_A . bloque_sentencias LLAVE_C  (1)
	bloque_sentencias : .  (3)

	.  reduce 3

	bloque_sentencias  goto 5


state 5
	program : nombre_program LLAVE_A bloque_sentencias . LLAVE_C  (1)
	bloque_sentencias : bloque_sentencias . sentencia PUNTOCOMA  (4)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	LLAVE_C  shift 13
	CONST  shift 14
	.  error

	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 6
	sentencia_if : IF . PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF . PARENT_A condicion PARENT_C THEN bloque_ejecutable END_IF  (45)

	PARENT_A  shift 27
	.  error


state 7
	sentencia_out : OUT . PARENT_A CADENA PARENT_C  (54)

	PARENT_A  shift 28
	.  error


state 8
	sentencia_decl_fun : FUN . ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN . ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)
	sentencia_decl_fun : FUN . ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	ID  shift 29
	.  error


state 9
	sentencia_when : WHEN . PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C  (55)

	PARENT_A  shift 30
	.  error


state 10
	sentencia_while : WHILE . PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (56)

	PARENT_A  shift 31
	.  error


state 11
	sentencia_for : FOR . PARENT_A encabezado_for PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (72)

	PARENT_A  shift 32
	.  error


state 12
	sentencia_decl_datos : ID . list_var  (10)
	asignacion : ID . ASIG expresion  (29)

	ID  shift 33
	ASIG  shift 34
	.  error

	list_var  goto 35


state 13
	program : nombre_program LLAVE_A bloque_sentencias LLAVE_C .  (1)

	.  reduce 1


state 14
	lista_const : CONST . lista_asignacion  (20)

	ID  shift 36
	.  error

	lista_asignacion  goto 37
	asignacion  goto 38


state 15
	bloque_sentencias : bloque_sentencias sentencia . PUNTOCOMA  (4)

	PUNTOCOMA  shift 39
	.  error


state 16
	sentencia : sentencia_declarativa .  (5)

	.  reduce 5


state 17
	sentencia : sentencia_ejecutable .  (6)

	.  reduce 6


state 18
	sentencia_declarativa : sentencia_decl_datos .  (7)

	.  reduce 7


state 19
	sentencia_declarativa : sentencia_decl_fun .  (8)

	.  reduce 8


state 20
	sentencia_declarativa : lista_const .  (9)

	.  reduce 9


state 21
	sentencia_ejecutable : asignacion .  (23)

	.  reduce 23


state 22
	sentencia_ejecutable : sentencia_if .  (24)

	.  reduce 24


state 23
	sentencia_ejecutable : sentencia_out .  (25)

	.  reduce 25


state 24
	sentencia_ejecutable : sentencia_when .  (26)

	.  reduce 26


state 25
	sentencia_ejecutable : sentencia_for .  (27)

	.  reduce 27


state 26
	sentencia_ejecutable : sentencia_while .  (28)

	.  reduce 28


state 27
	sentencia_if : IF PARENT_A . condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF PARENT_A . condicion PARENT_C THEN bloque_ejecutable END_IF  (45)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 44
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50
	condicion  goto 51


state 28
	sentencia_out : OUT PARENT_A . CADENA PARENT_C  (54)

	CADENA  shift 52
	.  error


state 29
	sentencia_decl_fun : FUN ID . PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN ID . PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)
	sentencia_decl_fun : FUN ID . PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	PARENT_A  shift 53
	.  error


state 30
	sentencia_when : WHEN PARENT_A . condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C  (55)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 44
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50
	condicion  goto 54


state 31
	sentencia_while : WHILE PARENT_A . condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (56)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 44
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50
	condicion  goto 55


state 32
	sentencia_for : FOR PARENT_A . encabezado_for PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (72)

	ID  shift 36
	.  error

	asignacion  goto 56
	encabezado_for  goto 57


state 33
	list_var : ID .  (12)

	.  reduce 12


state 34
	asignacion : ID ASIG . expresion  (29)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 58
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50


state 35
	sentencia_decl_datos : ID list_var .  (10)
	list_var : list_var . COMA ID  (11)

	COMA  shift 59
	PUNTOCOMA  reduce 10


state 36
	asignacion : ID . ASIG expresion  (29)

	ASIG  shift 34
	.  error


state 37
	lista_const : CONST lista_asignacion .  (20)
	lista_asignacion : lista_asignacion . COMA asignacion  (21)

	COMA  shift 60
	PUNTOCOMA  reduce 20


state 38
	lista_asignacion : asignacion .  (22)

	.  reduce 22


state 39
	bloque_sentencias : bloque_sentencias sentencia PUNTOCOMA .  (4)

	.  reduce 4


state 40
	factor : ID .  (40)
	llamado_func : ID . PARENT_A list_param_real PARENT_C  (79)
	llamado_func : ID . PARENT_A PARENT_C  (80)

	PARENT_A  shift 61
	PARENT_C  reduce 40
	COMA  reduce 40
	PUNTOCOMA  reduce 40
	IGUAL  reduce 40
	MAYOR  reduce 40
	MENOR  reduce 40
	MENORIGUAL  reduce 40
	MAYORIGUAL  reduce 40
	SUMA  reduce 40
	RESTA  reduce 40
	MULT  reduce 40
	DIV  reduce 40


state 41
	cte : I32 .  (42)

	.  reduce 42


state 42
	cte : F32 .  (43)

	.  reduce 43


state 43
	factor : RESTA . cte  (39)

	I32  shift 41
	F32  shift 42
	.  error

	cte  goto 62


state 44
	expresion : expresion . SUMA termino  (30)
	expresion : expresion . RESTA termino  (31)
	condicion : expresion . comparacion expresion  (46)

	IGUAL  shift 63
	MAYOR  shift 64
	MENOR  shift 65
	MENORIGUAL  shift 66
	MAYORIGUAL  shift 67
	SUMA  shift 68
	RESTA  shift 69
	.  error

	comparacion  goto 70


state 45
	expresion : sentencia_for .  (34)

	.  reduce 34


state 46
	expresion : sentencia_while .  (35)

	.  reduce 35


state 47
	expresion : termino .  (32)
	termino : termino . MULT factor  (36)
	termino : termino . DIV factor  (37)

	MULT  shift 71
	DIV  shift 72
	PARENT_C  reduce 32
	COMA  reduce 32
	PUNTOCOMA  reduce 32
	IGUAL  reduce 32
	MAYOR  reduce 32
	MENOR  reduce 32
	MENORIGUAL  reduce 32
	MAYORIGUAL  reduce 32
	SUMA  reduce 32
	RESTA  reduce 32


state 48
	expresion : llamado_func .  (33)

	.  reduce 33


state 49
	termino : factor .  (38)

	.  reduce 38


state 50
	factor : cte .  (41)

	.  reduce 41


state 51
	sentencia_if : IF PARENT_A condicion . PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF PARENT_A condicion . PARENT_C THEN bloque_ejecutable END_IF  (45)

	PARENT_C  shift 73
	.  error


state 52
	sentencia_out : OUT PARENT_A CADENA . PARENT_C  (54)

	PARENT_C  shift 74
	.  error


state 53
	sentencia_decl_fun : FUN ID PARENT_A . parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN ID PARENT_A . parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)
	sentencia_decl_fun : FUN ID PARENT_A . PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	ID  shift 75
	PARENT_C  shift 76
	.  error

	parametro  goto 77


state 54
	sentencia_when : WHEN PARENT_A condicion . PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C  (55)

	PARENT_C  shift 78
	.  error


state 55
	sentencia_while : WHILE PARENT_A condicion . PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (56)

	PARENT_C  shift 79
	.  error


state 56
	encabezado_for : asignacion . PUNTOCOMA comparacion PUNTOCOMA SUMA ID  (73)
	encabezado_for : asignacion . PUNTOCOMA comparacion PUNTOCOMA RESTA ID  (74)

	PUNTOCOMA  shift 80
	.  error


state 57
	sentencia_for : FOR PARENT_A encabezado_for . PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (72)

	PARENT_C  shift 81
	.  error


state 58
	asignacion : ID ASIG expresion .  (29)
	expresion : expresion . SUMA termino  (30)
	expresion : expresion . RESTA termino  (31)

	SUMA  shift 68
	RESTA  shift 69
	PARENT_C  reduce 29
	COMA  reduce 29
	PUNTOCOMA  reduce 29


state 59
	list_var : list_var COMA . ID  (11)

	ID  shift 82
	.  error


state 60
	lista_asignacion : lista_asignacion COMA . asignacion  (21)

	ID  shift 36
	.  error

	asignacion  goto 83


state 61
	llamado_func : ID PARENT_A . list_param_real PARENT_C  (79)
	llamado_func : ID PARENT_A . PARENT_C  (80)

	ID  shift 84
	I32  shift 41
	F32  shift 42
	PARENT_C  shift 85
	.  error

	cte  goto 86
	list_param_real  goto 87


state 62
	factor : RESTA cte .  (39)

	.  reduce 39


state 63
	comparacion : IGUAL .  (47)

	.  reduce 47


state 64
	comparacion : MAYOR .  (48)

	.  reduce 48


state 65
	comparacion : MENOR .  (49)

	.  reduce 49


state 66
	comparacion : MENORIGUAL .  (50)

	.  reduce 50


state 67
	comparacion : MAYORIGUAL .  (51)

	.  reduce 51


state 68
	expresion : expresion SUMA . termino  (30)

	ID  shift 88
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	termino  goto 89
	factor  goto 49
	cte  goto 50


state 69
	expresion : expresion RESTA . termino  (31)

	ID  shift 88
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	termino  goto 90
	factor  goto 49
	cte  goto 50


state 70
	condicion : expresion comparacion . expresion  (46)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 91
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50


state 71
	termino : termino MULT . factor  (36)

	ID  shift 88
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	factor  goto 92
	cte  goto 50


state 72
	termino : termino DIV . factor  (37)

	ID  shift 88
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	factor  goto 93
	cte  goto 50


state 73
	sentencia_if : IF PARENT_A condicion PARENT_C . THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF PARENT_A condicion PARENT_C . THEN bloque_ejecutable END_IF  (45)

	THEN  shift 94
	.  error


state 74
	sentencia_out : OUT PARENT_A CADENA PARENT_C .  (54)

	.  reduce 54


state 75
	parametro : ID . ID  (17)

	ID  shift 95
	.  error


state 76
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C . DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	DOSPUNTOS  shift 96
	.  error


state 77
	sentencia_decl_fun : FUN ID PARENT_A parametro . COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN ID PARENT_A parametro . PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)

	PARENT_C  shift 97
	COMA  shift 98
	.  error


state 78
	sentencia_when : WHEN PARENT_A condicion PARENT_C . THEN LLAVE_A bloque_sentencias LLAVE_C  (55)

	THEN  shift 99
	.  error


state 79
	sentencia_while : WHILE PARENT_A condicion PARENT_C . DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (56)

	DOSPUNTOS  shift 100
	.  error


state 80
	encabezado_for : asignacion PUNTOCOMA . comparacion PUNTOCOMA SUMA ID  (73)
	encabezado_for : asignacion PUNTOCOMA . comparacion PUNTOCOMA RESTA ID  (74)

	IGUAL  shift 63
	MAYOR  shift 64
	MENOR  shift 65
	MENORIGUAL  shift 66
	MAYORIGUAL  shift 67
	.  error

	comparacion  goto 101


state 81
	sentencia_for : FOR PARENT_A encabezado_for PARENT_C . LLAVE_A bloque_break_continue LLAVE_C  (72)

	LLAVE_A  shift 102
	.  error


state 82
	list_var : list_var COMA ID .  (11)

	.  reduce 11


state 83
	lista_asignacion : lista_asignacion COMA asignacion .  (21)

	.  reduce 21


state 84
	list_param_real : ID .  (78)

	.  reduce 78


state 85
	llamado_func : ID PARENT_A PARENT_C .  (80)

	.  reduce 80


state 86
	list_param_real : cte .  (77)

	.  reduce 77


state 87
	list_param_real : list_param_real . COMA ID  (75)
	list_param_real : list_param_real . COMA cte  (76)
	llamado_func : ID PARENT_A list_param_real . PARENT_C  (79)

	PARENT_C  shift 103
	COMA  shift 104
	.  error


state 88
	factor : ID .  (40)

	.  reduce 40


state 89
	expresion : expresion SUMA termino .  (30)
	termino : termino . MULT factor  (36)
	termino : termino . DIV factor  (37)

	MULT  shift 71
	DIV  shift 72
	PARENT_C  reduce 30
	COMA  reduce 30
	PUNTOCOMA  reduce 30
	IGUAL  reduce 30
	MAYOR  reduce 30
	MENOR  reduce 30
	MENORIGUAL  reduce 30
	MAYORIGUAL  reduce 30
	SUMA  reduce 30
	RESTA  reduce 30


state 90
	expresion : expresion RESTA termino .  (31)
	termino : termino . MULT factor  (36)
	termino : termino . DIV factor  (37)

	MULT  shift 71
	DIV  shift 72
	PARENT_C  reduce 31
	COMA  reduce 31
	PUNTOCOMA  reduce 31
	IGUAL  reduce 31
	MAYOR  reduce 31
	MENOR  reduce 31
	MENORIGUAL  reduce 31
	MAYORIGUAL  reduce 31
	SUMA  reduce 31
	RESTA  reduce 31


state 91
	expresion : expresion . SUMA termino  (30)
	expresion : expresion . RESTA termino  (31)
	condicion : expresion comparacion expresion .  (46)

	SUMA  shift 68
	RESTA  shift 69
	PARENT_C  reduce 46


state 92
	termino : termino MULT factor .  (36)

	.  reduce 36


state 93
	termino : termino DIV factor .  (37)

	.  reduce 37


state 94
	sentencia_if : IF PARENT_A condicion PARENT_C THEN . bloque_ejecutable ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF PARENT_A condicion PARENT_C THEN . bloque_ejecutable END_IF  (45)
	bloque_ejecutable : .  (52)

	LLAVE_A  shift 105
	ELSE  reduce 52
	END_IF  reduce 52

	bloque_ejecutable  goto 106


state 95
	parametro : ID ID .  (17)

	.  reduce 17


state 96
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS . ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	ID  shift 107
	.  error


state 97
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C . DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)

	DOSPUNTOS  shift 108
	.  error


state 98
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA . parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	ID  shift 75
	.  error

	parametro  goto 109


state 99
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN . LLAVE_A bloque_sentencias LLAVE_C  (55)

	LLAVE_A  shift 110
	.  error


state 100
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS . PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (56)

	PARENT_A  shift 111
	.  error


state 101
	encabezado_for : asignacion PUNTOCOMA comparacion . PUNTOCOMA SUMA ID  (73)
	encabezado_for : asignacion PUNTOCOMA comparacion . PUNTOCOMA RESTA ID  (74)

	PUNTOCOMA  shift 112
	.  error


state 102
	sentencia_for : FOR PARENT_A encabezado_for PARENT_C LLAVE_A . bloque_break_continue LLAVE_C  (72)
	bloque_break_continue : .  (57)

	.  reduce 57

	bloque_break_continue  goto 113


state 103
	llamado_func : ID PARENT_A list_param_real PARENT_C .  (79)

	.  reduce 79


state 104
	list_param_real : list_param_real COMA . ID  (75)
	list_param_real : list_param_real COMA . cte  (76)

	ID  shift 114
	I32  shift 41
	F32  shift 42
	.  error

	cte  goto 115


state 105
	bloque_ejecutable : LLAVE_A . bloque_ejecutable sentencia_ejecutable PUNTOCOMA LLAVE_C  (53)
	bloque_ejecutable : .  (52)

	LLAVE_A  shift 105
	IF  reduce 52
	OUT  reduce 52
	WHEN  reduce 52
	WHILE  reduce 52
	FOR  reduce 52
	ID  reduce 52

	bloque_ejecutable  goto 116


state 106
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable . ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable . END_IF  (45)

	ELSE  shift 117
	END_IF  shift 118
	.  error


state 107
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID . LLAVE_A cuerpo_fun LLAVE_C  (15)

	LLAVE_A  shift 119
	.  error


state 108
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS . ID LLAVE_A cuerpo_fun LLAVE_C  (14)

	ID  shift 120
	.  error


state 109
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro . PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	PARENT_C  shift 121
	.  error


state 110
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A . bloque_sentencias LLAVE_C  (55)
	bloque_sentencias : .  (3)

	.  reduce 3

	bloque_sentencias  goto 122


state 111
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A . asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (56)

	ID  shift 36
	.  error

	asignacion  goto 123


state 112
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA . SUMA ID  (73)
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA . RESTA ID  (74)

	SUMA  shift 124
	RESTA  shift 125
	.  error


state 113
	bloque_break_continue : bloque_break_continue . ejecutables_break_continue PUNTOCOMA  (58)
	sentencia_for : FOR PARENT_A encabezado_for PARENT_C LLAVE_A bloque_break_continue . LLAVE_C  (72)

	IF  shift 126
	OUT  shift 7
	BREAK  shift 127
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	CONTINUE  shift 128
	ID  shift 36
	LLAVE_C  shift 129
	.  error

	asignacion  goto 130
	sentencia_out  goto 131
	sentencia_when  goto 132
	sentencia_for  goto 133
	sentencia_while  goto 134
	ejecutables_break_continue  goto 135
	sentencia_if_break  goto 136


state 114
	list_param_real : list_param_real COMA ID .  (75)

	.  reduce 75


state 115
	list_param_real : list_param_real COMA cte .  (76)

	.  reduce 76


state 116
	bloque_ejecutable : LLAVE_A bloque_ejecutable . sentencia_ejecutable PUNTOCOMA LLAVE_C  (53)

	IF  shift 6
	OUT  shift 7
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 36
	.  error

	sentencia_ejecutable  goto 137
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 117
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE . bloque_ejecutable END_IF  (44)
	bloque_ejecutable : .  (52)

	LLAVE_A  shift 105
	END_IF  reduce 52

	bloque_ejecutable  goto 138


state 118
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable END_IF .  (45)

	.  reduce 45


state 119
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A . cuerpo_fun LLAVE_C  (15)
	cuerpo_fun : .  (18)

	.  reduce 18

	cuerpo_fun  goto 139


state 120
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID . LLAVE_A cuerpo_fun LLAVE_C  (14)

	LLAVE_A  shift 140
	.  error


state 121
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C . DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	DOSPUNTOS  shift 141
	.  error


state 122
	bloque_sentencias : bloque_sentencias . sentencia PUNTOCOMA  (4)
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias . LLAVE_C  (55)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	LLAVE_C  shift 142
	CONST  shift 14
	.  error

	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 123
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion . PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (56)

	PARENT_C  shift 143
	.  error


state 124
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA SUMA . ID  (73)

	ID  shift 144
	.  error


state 125
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA RESTA . ID  (74)

	ID  shift 145
	.  error


state 126
	sentencia_if_break : IF . PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF  (70)
	sentencia_if_break : IF . PARENT_A condicion PARENT_C THEN bloque_break_continue END_IF  (71)

	PARENT_A  shift 146
	.  error


state 127
	ejecutables_break_continue : BREAK .  (66)
	ejecutables_break_continue : BREAK . cte  (67)

	I32  shift 41
	F32  shift 42
	PUNTOCOMA  reduce 66

	cte  goto 147


state 128
	ejecutables_break_continue : CONTINUE . tag  (65)
	tag : .  (68)

	DOSPUNTOS  shift 148
	PUNTOCOMA  reduce 68

	tag  goto 149


state 129
	sentencia_for : FOR PARENT_A encabezado_for PARENT_C LLAVE_A bloque_break_continue LLAVE_C .  (72)

	.  reduce 72


state 130
	ejecutables_break_continue : asignacion .  (59)

	.  reduce 59


state 131
	ejecutables_break_continue : sentencia_out .  (61)

	.  reduce 61


state 132
	ejecutables_break_continue : sentencia_when .  (62)

	.  reduce 62


state 133
	ejecutables_break_continue : sentencia_for .  (64)

	.  reduce 64


state 134
	ejecutables_break_continue : sentencia_while .  (63)

	.  reduce 63


state 135
	bloque_break_continue : bloque_break_continue ejecutables_break_continue . PUNTOCOMA  (58)

	PUNTOCOMA  shift 150
	.  error


state 136
	ejecutables_break_continue : sentencia_if_break .  (60)

	.  reduce 60


state 137
	bloque_ejecutable : LLAVE_A bloque_ejecutable sentencia_ejecutable . PUNTOCOMA LLAVE_C  (53)

	PUNTOCOMA  shift 151
	.  error


state 138
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable . END_IF  (44)

	END_IF  shift 152
	.  error


state 139
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun . LLAVE_C  (15)
	cuerpo_fun : cuerpo_fun . bloque_sentencias retorno  (19)
	bloque_sentencias : .  (3)

	LLAVE_C  shift 153
	IF  reduce 3
	OUT  reduce 3
	FUN  reduce 3
	RETURN  reduce 3
	WHEN  reduce 3
	WHILE  reduce 3
	FOR  reduce 3
	ID  reduce 3
	CONST  reduce 3

	bloque_sentencias  goto 154


state 140
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A . cuerpo_fun LLAVE_C  (14)
	cuerpo_fun : .  (18)

	.  reduce 18

	cuerpo_fun  goto 155


state 141
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS . ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	ID  shift 156
	.  error


state 142
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C .  (55)

	.  reduce 55


state 143
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C . LLAVE_A bloque_break_continue LLAVE_C  (56)

	LLAVE_A  shift 157
	.  error


state 144
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA SUMA ID .  (73)

	.  reduce 73


state 145
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA RESTA ID .  (74)

	.  reduce 74


state 146
	sentencia_if_break : IF PARENT_A . condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF  (70)
	sentencia_if_break : IF PARENT_A . condicion PARENT_C THEN bloque_break_continue END_IF  (71)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 44
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50
	condicion  goto 158


state 147
	ejecutables_break_continue : BREAK cte .  (67)

	.  reduce 67


state 148
	tag : DOSPUNTOS . ID  (69)

	ID  shift 159
	.  error


state 149
	ejecutables_break_continue : CONTINUE tag .  (65)

	.  reduce 65


state 150
	bloque_break_continue : bloque_break_continue ejecutables_break_continue PUNTOCOMA .  (58)

	.  reduce 58


state 151
	bloque_ejecutable : LLAVE_A bloque_ejecutable sentencia_ejecutable PUNTOCOMA . LLAVE_C  (53)

	LLAVE_C  shift 160
	.  error


state 152
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF .  (44)

	.  reduce 44


state 153
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C .  (15)

	.  reduce 15


state 154
	bloque_sentencias : bloque_sentencias . sentencia PUNTOCOMA  (4)
	cuerpo_fun : cuerpo_fun bloque_sentencias . retorno  (19)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	RETURN  shift 161
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	CONST  shift 14
	.  error

	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	retorno  goto 162
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 155
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun . LLAVE_C  (14)
	cuerpo_fun : cuerpo_fun . bloque_sentencias retorno  (19)
	bloque_sentencias : .  (3)

	LLAVE_C  shift 163
	IF  reduce 3
	OUT  reduce 3
	FUN  reduce 3
	RETURN  reduce 3
	WHEN  reduce 3
	WHILE  reduce 3
	FOR  reduce 3
	ID  reduce 3
	CONST  reduce 3

	bloque_sentencias  goto 154


state 156
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID . LLAVE_A cuerpo_fun LLAVE_C  (13)

	LLAVE_A  shift 164
	.  error


state 157
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A . bloque_break_continue LLAVE_C  (56)
	bloque_break_continue : .  (57)

	.  reduce 57

	bloque_break_continue  goto 165


state 158
	sentencia_if_break : IF PARENT_A condicion . PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF  (70)
	sentencia_if_break : IF PARENT_A condicion . PARENT_C THEN bloque_break_continue END_IF  (71)

	PARENT_C  shift 166
	.  error


state 159
	tag : DOSPUNTOS ID .  (69)

	.  reduce 69


state 160
	bloque_ejecutable : LLAVE_A bloque_ejecutable sentencia_ejecutable PUNTOCOMA LLAVE_C .  (53)

	.  reduce 53


state 161
	retorno : RETURN . PARENT_A expresion PARENT_C PUNTOCOMA  (16)

	PARENT_A  shift 167
	.  error


state 162
	cuerpo_fun : cuerpo_fun bloque_sentencias retorno .  (19)

	.  reduce 19


state 163
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C .  (14)

	.  reduce 14


state 164
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A . cuerpo_fun LLAVE_C  (13)
	cuerpo_fun : .  (18)

	.  reduce 18

	cuerpo_fun  goto 168


state 165
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue . LLAVE_C  (56)
	bloque_break_continue : bloque_break_continue . ejecutables_break_continue PUNTOCOMA  (58)

	IF  shift 126
	OUT  shift 7
	BREAK  shift 127
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	CONTINUE  shift 128
	ID  shift 36
	LLAVE_C  shift 169
	.  error

	asignacion  goto 130
	sentencia_out  goto 131
	sentencia_when  goto 132
	sentencia_for  goto 133
	sentencia_while  goto 134
	ejecutables_break_continue  goto 135
	sentencia_if_break  goto 136


state 166
	sentencia_if_break : IF PARENT_A condicion PARENT_C . THEN bloque_break_continue ELSE bloque_break_continue END_IF  (70)
	sentencia_if_break : IF PARENT_A condicion PARENT_C . THEN bloque_break_continue END_IF  (71)

	THEN  shift 170
	.  error


state 167
	retorno : RETURN PARENT_A . expresion PARENT_C PUNTOCOMA  (16)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 171
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50


state 168
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun . LLAVE_C  (13)
	cuerpo_fun : cuerpo_fun . bloque_sentencias retorno  (19)
	bloque_sentencias : .  (3)

	LLAVE_C  shift 172
	IF  reduce 3
	OUT  reduce 3
	FUN  reduce 3
	RETURN  reduce 3
	WHEN  reduce 3
	WHILE  reduce 3
	FOR  reduce 3
	ID  reduce 3
	CONST  reduce 3

	bloque_sentencias  goto 154


state 169
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C .  (56)

	.  reduce 56


state 170
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN . bloque_break_continue ELSE bloque_break_continue END_IF  (70)
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN . bloque_break_continue END_IF  (71)
	bloque_break_continue : .  (57)

	.  reduce 57

	bloque_break_continue  goto 173


state 171
	retorno : RETURN PARENT_A expresion . PARENT_C PUNTOCOMA  (16)
	expresion : expresion . SUMA termino  (30)
	expresion : expresion . RESTA termino  (31)

	PARENT_C  shift 174
	SUMA  shift 68
	RESTA  shift 69
	.  error


state 172
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C .  (13)

	.  reduce 13


state 173
	bloque_break_continue : bloque_break_continue . ejecutables_break_continue PUNTOCOMA  (58)
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue . ELSE bloque_break_continue END_IF  (70)
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue . END_IF  (71)

	IF  shift 126
	ELSE  shift 175
	END_IF  shift 176
	OUT  shift 7
	BREAK  shift 127
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	CONTINUE  shift 128
	ID  shift 36
	.  error

	asignacion  goto 130
	sentencia_out  goto 131
	sentencia_when  goto 132
	sentencia_for  goto 133
	sentencia_while  goto 134
	ejecutables_break_continue  goto 135
	sentencia_if_break  goto 136


state 174
	retorno : RETURN PARENT_A expresion PARENT_C . PUNTOCOMA  (16)

	PUNTOCOMA  shift 177
	.  error


state 175
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE . bloque_break_continue END_IF  (70)
	bloque_break_continue : .  (57)

	.  reduce 57

	bloque_break_continue  goto 178


state 176
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue END_IF .  (71)

	.  reduce 71


state 177
	retorno : RETURN PARENT_A expresion PARENT_C PUNTOCOMA .  (16)

	.  reduce 16


state 178
	bloque_break_continue : bloque_break_continue . ejecutables_break_continue PUNTOCOMA  (58)
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue . END_IF  (70)

	IF  shift 126
	END_IF  shift 179
	OUT  shift 7
	BREAK  shift 127
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	CONTINUE  shift 128
	ID  shift 36
	.  error

	asignacion  goto 130
	sentencia_out  goto 131
	sentencia_when  goto 132
	sentencia_for  goto 133
	sentencia_while  goto 134
	ejecutables_break_continue  goto 135
	sentencia_if_break  goto 136


state 179
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF .  (70)

	.  reduce 70


41 terminals, 35 nonterminals
81 grammar rules, 180 states
