   0  $accept : program $end

   1  program : nombre_program LLAVE_A bloque_sentencias LLAVE_C

   2  nombre_program : ID

   3  bloque_sentencias :
   4                    | bloque_sentencias sentencia PUNTOCOMA

   5  sentencia : sentencia_declarativa
   6            | sentencia_ejecutable

   7  sentencia_declarativa : sentencia_decl_datos
   8                        | sentencia_decl_fun
   9                        | lista_const

  10  sentencia_decl_datos : ID list_var

  11  list_var : list_var COMA ID
  12           | ID

  13  sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C
  14                     | FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C
  15                     | FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C

  16  retorno : RETURN PARENT_A expresion PARENT_C PUNTOCOMA

  17  parametro : ID ID

  18  cuerpo_fun : cuerpo_fun bloque_ejecutable_funcion
  19             | cuerpo_fun sentencia_declarativa
  20             | bloque_ejecutable_funcion
  21             | sentencia_declarativa

  22  bloque_ejecutable_funcion : sentencia_ejecutable retorno
  23                            | sentencia_ejecutable

  24  lista_const : CONST lista_asignacion

  25  lista_asignacion : lista_asignacion COMA asignacion
  26                   | asignacion

  27  sentencia_ejecutable : asignacion
  28                       | sentencia_if
  29                       | sentencia_out
  30                       | sentencia_when
  31                       | sentencia_for
  32                       | sentencia_while

  33  asignacion : ID ASIG expresion

  34  expresion : expresion SUMA termino
  35            | expresion RESTA termino
  36            | termino
  37            | llamado_func
  38            | sentencia_for
  39            | sentencia_while

  40  termino : termino MULT factor
  41          | termino DIV factor
  42          | factor

  43  factor : RESTA cte
  44         | ID
  45         | cte

  46  cte : I32
  47      | F32

  48  sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF
  49               | IF PARENT_A condicion PARENT_C THEN bloque_ejecutable END_IF

  50  condicion : expresion comparacion expresion

  51  comparacion : IGUAL
  52              | MAYOR
  53              | MENOR
  54              | MENORIGUAL
  55              | MAYORIGUAL

  56  bloque_ejecutable :
  57                    | bloque_ejecutable sentencia_ejecutable PUNTOCOMA

  58  sentencia_out : OUT PARENT_A CADENA PARENT_C

  59  sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C

  60  sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C

  61  bloque_break_continue :
  62                        | bloque_break_continue ejecutables_break_continue PUNTOCOMA

  63  ejecutables_break_continue : asignacion
  64                             | sentencia_if_break
  65                             | sentencia_out
  66                             | sentencia_when
  67                             | sentencia_while
  68                             | sentencia_for
  69                             | CONTINUE tag
  70                             | BREAK
  71                             | BREAK cte

  72  tag :
  73      | DOSPUNTOS ID

  74  sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF
  75                     | IF PARENT_A condicion PARENT_C THEN bloque_break_continue END_IF

  76  sentencia_for : FOR PARENT_A encabezado_for PARENT_C LLAVE_A bloque_break_continue LLAVE_C

  77  encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA SUMA ID
  78                 | asignacion PUNTOCOMA comparacion PUNTOCOMA RESTA ID

  79  list_param_real : list_param_real COMA ID
  80                  | list_param_real COMA cte
  81                  | cte
  82                  | ID

  83  llamado_func : ID PARENT_A list_param_real PARENT_C
  84               | ID PARENT_A PARENT_C

state 0
	$accept : . program $end  (0)

	ID  shift 1
	.  error

	program  goto 2
	nombre_program  goto 3


state 1
	nombre_program : ID .  (2)

	.  reduce 2


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	program : nombre_program . LLAVE_A bloque_sentencias LLAVE_C  (1)

	LLAVE_A  shift 4
	.  error


state 4
	program : nombre_program LLAVE_A . bloque_sentencias LLAVE_C  (1)
	bloque_sentencias : .  (3)

	.  reduce 3

	bloque_sentencias  goto 5


state 5
	program : nombre_program LLAVE_A bloque_sentencias . LLAVE_C  (1)
	bloque_sentencias : bloque_sentencias . sentencia PUNTOCOMA  (4)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	LLAVE_C  shift 13
	CONST  shift 14
	.  error

	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 6
	sentencia_if : IF . PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (48)
	sentencia_if : IF . PARENT_A condicion PARENT_C THEN bloque_ejecutable END_IF  (49)

	PARENT_A  shift 27
	.  error


state 7
	sentencia_out : OUT . PARENT_A CADENA PARENT_C  (58)

	PARENT_A  shift 28
	.  error


state 8
	sentencia_decl_fun : FUN . ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN . ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)
	sentencia_decl_fun : FUN . ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	ID  shift 29
	.  error


state 9
	sentencia_when : WHEN . PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C  (59)

	PARENT_A  shift 30
	.  error


state 10
	sentencia_while : WHILE . PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (60)

	PARENT_A  shift 31
	.  error


state 11
	sentencia_for : FOR . PARENT_A encabezado_for PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (76)

	PARENT_A  shift 32
	.  error


state 12
	sentencia_decl_datos : ID . list_var  (10)
	asignacion : ID . ASIG expresion  (33)

	ID  shift 33
	ASIG  shift 34
	.  error

	list_var  goto 35


state 13
	program : nombre_program LLAVE_A bloque_sentencias LLAVE_C .  (1)

	.  reduce 1


state 14
	lista_const : CONST . lista_asignacion  (24)

	ID  shift 36
	.  error

	lista_asignacion  goto 37
	asignacion  goto 38


state 15
	bloque_sentencias : bloque_sentencias sentencia . PUNTOCOMA  (4)

	PUNTOCOMA  shift 39
	.  error


state 16
	sentencia : sentencia_declarativa .  (5)

	.  reduce 5


state 17
	sentencia : sentencia_ejecutable .  (6)

	.  reduce 6


state 18
	sentencia_declarativa : sentencia_decl_datos .  (7)

	.  reduce 7


state 19
	sentencia_declarativa : sentencia_decl_fun .  (8)

	.  reduce 8


state 20
	sentencia_declarativa : lista_const .  (9)

	.  reduce 9


state 21
	sentencia_ejecutable : asignacion .  (27)

	.  reduce 27


state 22
	sentencia_ejecutable : sentencia_if .  (28)

	.  reduce 28


state 23
	sentencia_ejecutable : sentencia_out .  (29)

	.  reduce 29


state 24
	sentencia_ejecutable : sentencia_when .  (30)

	.  reduce 30


state 25
	sentencia_ejecutable : sentencia_for .  (31)

	.  reduce 31


state 26
	sentencia_ejecutable : sentencia_while .  (32)

	.  reduce 32


state 27
	sentencia_if : IF PARENT_A . condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (48)
	sentencia_if : IF PARENT_A . condicion PARENT_C THEN bloque_ejecutable END_IF  (49)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 44
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50
	condicion  goto 51


state 28
	sentencia_out : OUT PARENT_A . CADENA PARENT_C  (58)

	CADENA  shift 52
	.  error


state 29
	sentencia_decl_fun : FUN ID . PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN ID . PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)
	sentencia_decl_fun : FUN ID . PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	PARENT_A  shift 53
	.  error


state 30
	sentencia_when : WHEN PARENT_A . condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C  (59)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 44
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50
	condicion  goto 54


state 31
	sentencia_while : WHILE PARENT_A . condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (60)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 44
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50
	condicion  goto 55


state 32
	sentencia_for : FOR PARENT_A . encabezado_for PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (76)

	ID  shift 36
	.  error

	asignacion  goto 56
	encabezado_for  goto 57


state 33
	list_var : ID .  (12)

	.  reduce 12


state 34
	asignacion : ID ASIG . expresion  (33)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 58
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50


state 35
	sentencia_decl_datos : ID list_var .  (10)
	list_var : list_var . COMA ID  (11)

	COMA  shift 59
	IF  reduce 10
	OUT  reduce 10
	FUN  reduce 10
	WHEN  reduce 10
	WHILE  reduce 10
	FOR  reduce 10
	ID  reduce 10
	PUNTOCOMA  reduce 10
	LLAVE_C  reduce 10
	CONST  reduce 10


state 36
	asignacion : ID . ASIG expresion  (33)

	ASIG  shift 34
	.  error


state 37
	lista_const : CONST lista_asignacion .  (24)
	lista_asignacion : lista_asignacion . COMA asignacion  (25)

	COMA  shift 60
	IF  reduce 24
	OUT  reduce 24
	FUN  reduce 24
	WHEN  reduce 24
	WHILE  reduce 24
	FOR  reduce 24
	ID  reduce 24
	PUNTOCOMA  reduce 24
	LLAVE_C  reduce 24
	CONST  reduce 24


state 38
	lista_asignacion : asignacion .  (26)

	.  reduce 26


state 39
	bloque_sentencias : bloque_sentencias sentencia PUNTOCOMA .  (4)

	.  reduce 4


state 40
	factor : ID .  (44)
	llamado_func : ID . PARENT_A list_param_real PARENT_C  (83)
	llamado_func : ID . PARENT_A PARENT_C  (84)

	PARENT_A  shift 61
	IF  reduce 44
	OUT  reduce 44
	FUN  reduce 44
	RETURN  reduce 44
	WHEN  reduce 44
	WHILE  reduce 44
	FOR  reduce 44
	ID  reduce 44
	PARENT_C  reduce 44
	COMA  reduce 44
	PUNTOCOMA  reduce 44
	IGUAL  reduce 44
	MAYOR  reduce 44
	MENOR  reduce 44
	MENORIGUAL  reduce 44
	MAYORIGUAL  reduce 44
	LLAVE_C  reduce 44
	CONST  reduce 44
	SUMA  reduce 44
	RESTA  reduce 44
	MULT  reduce 44
	DIV  reduce 44


state 41
	cte : I32 .  (46)

	.  reduce 46


state 42
	cte : F32 .  (47)

	.  reduce 47


state 43
	factor : RESTA . cte  (43)

	I32  shift 41
	F32  shift 42
	.  error

	cte  goto 62


state 44
	expresion : expresion . SUMA termino  (34)
	expresion : expresion . RESTA termino  (35)
	condicion : expresion . comparacion expresion  (50)

	IGUAL  shift 63
	MAYOR  shift 64
	MENOR  shift 65
	MENORIGUAL  shift 66
	MAYORIGUAL  shift 67
	SUMA  shift 68
	RESTA  shift 69
	.  error

	comparacion  goto 70


state 45
	expresion : sentencia_for .  (38)

	.  reduce 38


state 46
	expresion : sentencia_while .  (39)

	.  reduce 39


state 47
	expresion : termino .  (36)
	termino : termino . MULT factor  (40)
	termino : termino . DIV factor  (41)

	MULT  shift 71
	DIV  shift 72
	IF  reduce 36
	OUT  reduce 36
	FUN  reduce 36
	RETURN  reduce 36
	WHEN  reduce 36
	WHILE  reduce 36
	FOR  reduce 36
	ID  reduce 36
	PARENT_C  reduce 36
	COMA  reduce 36
	PUNTOCOMA  reduce 36
	IGUAL  reduce 36
	MAYOR  reduce 36
	MENOR  reduce 36
	MENORIGUAL  reduce 36
	MAYORIGUAL  reduce 36
	LLAVE_C  reduce 36
	CONST  reduce 36
	SUMA  reduce 36
	RESTA  reduce 36


state 48
	expresion : llamado_func .  (37)

	.  reduce 37


state 49
	termino : factor .  (42)

	.  reduce 42


state 50
	factor : cte .  (45)

	.  reduce 45


state 51
	sentencia_if : IF PARENT_A condicion . PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (48)
	sentencia_if : IF PARENT_A condicion . PARENT_C THEN bloque_ejecutable END_IF  (49)

	PARENT_C  shift 73
	.  error


state 52
	sentencia_out : OUT PARENT_A CADENA . PARENT_C  (58)

	PARENT_C  shift 74
	.  error


state 53
	sentencia_decl_fun : FUN ID PARENT_A . parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN ID PARENT_A . parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)
	sentencia_decl_fun : FUN ID PARENT_A . PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	ID  shift 75
	PARENT_C  shift 76
	.  error

	parametro  goto 77


state 54
	sentencia_when : WHEN PARENT_A condicion . PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C  (59)

	PARENT_C  shift 78
	.  error


state 55
	sentencia_while : WHILE PARENT_A condicion . PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (60)

	PARENT_C  shift 79
	.  error


state 56
	encabezado_for : asignacion . PUNTOCOMA comparacion PUNTOCOMA SUMA ID  (77)
	encabezado_for : asignacion . PUNTOCOMA comparacion PUNTOCOMA RESTA ID  (78)

	PUNTOCOMA  shift 80
	.  error


state 57
	sentencia_for : FOR PARENT_A encabezado_for . PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (76)

	PARENT_C  shift 81
	.  error


state 58
	asignacion : ID ASIG expresion .  (33)
	expresion : expresion . SUMA termino  (34)
	expresion : expresion . RESTA termino  (35)

	SUMA  shift 68
	RESTA  shift 69
	IF  reduce 33
	OUT  reduce 33
	FUN  reduce 33
	RETURN  reduce 33
	WHEN  reduce 33
	WHILE  reduce 33
	FOR  reduce 33
	ID  reduce 33
	PARENT_C  reduce 33
	COMA  reduce 33
	PUNTOCOMA  reduce 33
	LLAVE_C  reduce 33
	CONST  reduce 33


state 59
	list_var : list_var COMA . ID  (11)

	ID  shift 82
	.  error


state 60
	lista_asignacion : lista_asignacion COMA . asignacion  (25)

	ID  shift 36
	.  error

	asignacion  goto 83


state 61
	llamado_func : ID PARENT_A . list_param_real PARENT_C  (83)
	llamado_func : ID PARENT_A . PARENT_C  (84)

	ID  shift 84
	I32  shift 41
	F32  shift 42
	PARENT_C  shift 85
	.  error

	cte  goto 86
	list_param_real  goto 87


state 62
	factor : RESTA cte .  (43)

	.  reduce 43


state 63
	comparacion : IGUAL .  (51)

	.  reduce 51


state 64
	comparacion : MAYOR .  (52)

	.  reduce 52


state 65
	comparacion : MENOR .  (53)

	.  reduce 53


state 66
	comparacion : MENORIGUAL .  (54)

	.  reduce 54


state 67
	comparacion : MAYORIGUAL .  (55)

	.  reduce 55


state 68
	expresion : expresion SUMA . termino  (34)

	ID  shift 88
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	termino  goto 89
	factor  goto 49
	cte  goto 50


state 69
	expresion : expresion RESTA . termino  (35)

	ID  shift 88
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	termino  goto 90
	factor  goto 49
	cte  goto 50


state 70
	condicion : expresion comparacion . expresion  (50)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 91
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50


state 71
	termino : termino MULT . factor  (40)

	ID  shift 88
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	factor  goto 92
	cte  goto 50


state 72
	termino : termino DIV . factor  (41)

	ID  shift 88
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	factor  goto 93
	cte  goto 50


state 73
	sentencia_if : IF PARENT_A condicion PARENT_C . THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (48)
	sentencia_if : IF PARENT_A condicion PARENT_C . THEN bloque_ejecutable END_IF  (49)

	THEN  shift 94
	.  error


state 74
	sentencia_out : OUT PARENT_A CADENA PARENT_C .  (58)

	.  reduce 58


state 75
	parametro : ID . ID  (17)

	ID  shift 95
	.  error


state 76
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C . DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	DOSPUNTOS  shift 96
	.  error


state 77
	sentencia_decl_fun : FUN ID PARENT_A parametro . COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN ID PARENT_A parametro . PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)

	PARENT_C  shift 97
	COMA  shift 98
	.  error


state 78
	sentencia_when : WHEN PARENT_A condicion PARENT_C . THEN LLAVE_A bloque_sentencias LLAVE_C  (59)

	THEN  shift 99
	.  error


state 79
	sentencia_while : WHILE PARENT_A condicion PARENT_C . DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (60)

	DOSPUNTOS  shift 100
	.  error


state 80
	encabezado_for : asignacion PUNTOCOMA . comparacion PUNTOCOMA SUMA ID  (77)
	encabezado_for : asignacion PUNTOCOMA . comparacion PUNTOCOMA RESTA ID  (78)

	IGUAL  shift 63
	MAYOR  shift 64
	MENOR  shift 65
	MENORIGUAL  shift 66
	MAYORIGUAL  shift 67
	.  error

	comparacion  goto 101


state 81
	sentencia_for : FOR PARENT_A encabezado_for PARENT_C . LLAVE_A bloque_break_continue LLAVE_C  (76)

	LLAVE_A  shift 102
	.  error


state 82
	list_var : list_var COMA ID .  (11)

	.  reduce 11


state 83
	lista_asignacion : lista_asignacion COMA asignacion .  (25)

	.  reduce 25


state 84
	list_param_real : ID .  (82)

	.  reduce 82


state 85
	llamado_func : ID PARENT_A PARENT_C .  (84)

	.  reduce 84


state 86
	list_param_real : cte .  (81)

	.  reduce 81


state 87
	list_param_real : list_param_real . COMA ID  (79)
	list_param_real : list_param_real . COMA cte  (80)
	llamado_func : ID PARENT_A list_param_real . PARENT_C  (83)

	PARENT_C  shift 103
	COMA  shift 104
	.  error


state 88
	factor : ID .  (44)

	.  reduce 44


state 89
	expresion : expresion SUMA termino .  (34)
	termino : termino . MULT factor  (40)
	termino : termino . DIV factor  (41)

	MULT  shift 71
	DIV  shift 72
	IF  reduce 34
	OUT  reduce 34
	FUN  reduce 34
	RETURN  reduce 34
	WHEN  reduce 34
	WHILE  reduce 34
	FOR  reduce 34
	ID  reduce 34
	PARENT_C  reduce 34
	COMA  reduce 34
	PUNTOCOMA  reduce 34
	IGUAL  reduce 34
	MAYOR  reduce 34
	MENOR  reduce 34
	MENORIGUAL  reduce 34
	MAYORIGUAL  reduce 34
	LLAVE_C  reduce 34
	CONST  reduce 34
	SUMA  reduce 34
	RESTA  reduce 34


state 90
	expresion : expresion RESTA termino .  (35)
	termino : termino . MULT factor  (40)
	termino : termino . DIV factor  (41)

	MULT  shift 71
	DIV  shift 72
	IF  reduce 35
	OUT  reduce 35
	FUN  reduce 35
	RETURN  reduce 35
	WHEN  reduce 35
	WHILE  reduce 35
	FOR  reduce 35
	ID  reduce 35
	PARENT_C  reduce 35
	COMA  reduce 35
	PUNTOCOMA  reduce 35
	IGUAL  reduce 35
	MAYOR  reduce 35
	MENOR  reduce 35
	MENORIGUAL  reduce 35
	MAYORIGUAL  reduce 35
	LLAVE_C  reduce 35
	CONST  reduce 35
	SUMA  reduce 35
	RESTA  reduce 35


state 91
	expresion : expresion . SUMA termino  (34)
	expresion : expresion . RESTA termino  (35)
	condicion : expresion comparacion expresion .  (50)

	SUMA  shift 68
	RESTA  shift 69
	PARENT_C  reduce 50


state 92
	termino : termino MULT factor .  (40)

	.  reduce 40


state 93
	termino : termino DIV factor .  (41)

	.  reduce 41


state 94
	sentencia_if : IF PARENT_A condicion PARENT_C THEN . bloque_ejecutable ELSE bloque_ejecutable END_IF  (48)
	sentencia_if : IF PARENT_A condicion PARENT_C THEN . bloque_ejecutable END_IF  (49)
	bloque_ejecutable : .  (56)

	.  reduce 56

	bloque_ejecutable  goto 105


state 95
	parametro : ID ID .  (17)

	.  reduce 17


state 96
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS . ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	ID  shift 106
	.  error


state 97
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C . DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)

	DOSPUNTOS  shift 107
	.  error


state 98
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA . parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	ID  shift 75
	.  error

	parametro  goto 108


state 99
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN . LLAVE_A bloque_sentencias LLAVE_C  (59)

	LLAVE_A  shift 109
	.  error


state 100
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS . PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (60)

	PARENT_A  shift 110
	.  error


state 101
	encabezado_for : asignacion PUNTOCOMA comparacion . PUNTOCOMA SUMA ID  (77)
	encabezado_for : asignacion PUNTOCOMA comparacion . PUNTOCOMA RESTA ID  (78)

	PUNTOCOMA  shift 111
	.  error


state 102
	sentencia_for : FOR PARENT_A encabezado_for PARENT_C LLAVE_A . bloque_break_continue LLAVE_C  (76)
	bloque_break_continue : .  (61)

	.  reduce 61

	bloque_break_continue  goto 112


state 103
	llamado_func : ID PARENT_A list_param_real PARENT_C .  (83)

	.  reduce 83


state 104
	list_param_real : list_param_real COMA . ID  (79)
	list_param_real : list_param_real COMA . cte  (80)

	ID  shift 113
	I32  shift 41
	F32  shift 42
	.  error

	cte  goto 114


state 105
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable . ELSE bloque_ejecutable END_IF  (48)
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable . END_IF  (49)
	bloque_ejecutable : bloque_ejecutable . sentencia_ejecutable PUNTOCOMA  (57)

	IF  shift 6
	ELSE  shift 115
	END_IF  shift 116
	OUT  shift 7
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 36
	.  error

	sentencia_ejecutable  goto 117
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 106
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID . LLAVE_A cuerpo_fun LLAVE_C  (15)

	LLAVE_A  shift 118
	.  error


state 107
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS . ID LLAVE_A cuerpo_fun LLAVE_C  (14)

	ID  shift 119
	.  error


state 108
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro . PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	PARENT_C  shift 120
	.  error


state 109
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A . bloque_sentencias LLAVE_C  (59)
	bloque_sentencias : .  (3)

	.  reduce 3

	bloque_sentencias  goto 121


state 110
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A . asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (60)

	ID  shift 36
	.  error

	asignacion  goto 122


state 111
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA . SUMA ID  (77)
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA . RESTA ID  (78)

	SUMA  shift 123
	RESTA  shift 124
	.  error


state 112
	bloque_break_continue : bloque_break_continue . ejecutables_break_continue PUNTOCOMA  (62)
	sentencia_for : FOR PARENT_A encabezado_for PARENT_C LLAVE_A bloque_break_continue . LLAVE_C  (76)

	IF  shift 125
	OUT  shift 7
	BREAK  shift 126
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	CONTINUE  shift 127
	ID  shift 36
	LLAVE_C  shift 128
	.  error

	asignacion  goto 129
	sentencia_out  goto 130
	sentencia_when  goto 131
	sentencia_for  goto 132
	sentencia_while  goto 133
	ejecutables_break_continue  goto 134
	sentencia_if_break  goto 135


state 113
	list_param_real : list_param_real COMA ID .  (79)

	.  reduce 79


state 114
	list_param_real : list_param_real COMA cte .  (80)

	.  reduce 80


state 115
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE . bloque_ejecutable END_IF  (48)
	bloque_ejecutable : .  (56)

	.  reduce 56

	bloque_ejecutable  goto 136


state 116
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable END_IF .  (49)

	.  reduce 49


state 117
	bloque_ejecutable : bloque_ejecutable sentencia_ejecutable . PUNTOCOMA  (57)

	PUNTOCOMA  shift 137
	.  error


state 118
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A . cuerpo_fun LLAVE_C  (15)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	CONST  shift 14
	.  error

	sentencia_declarativa  goto 138
	sentencia_ejecutable  goto 139
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	cuerpo_fun  goto 140
	bloque_ejecutable_funcion  goto 141
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 119
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID . LLAVE_A cuerpo_fun LLAVE_C  (14)

	LLAVE_A  shift 142
	.  error


state 120
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C . DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	DOSPUNTOS  shift 143
	.  error


state 121
	bloque_sentencias : bloque_sentencias . sentencia PUNTOCOMA  (4)
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias . LLAVE_C  (59)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	LLAVE_C  shift 144
	CONST  shift 14
	.  error

	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 122
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion . PARENT_C LLAVE_A bloque_break_continue LLAVE_C  (60)

	PARENT_C  shift 145
	.  error


state 123
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA SUMA . ID  (77)

	ID  shift 146
	.  error


state 124
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA RESTA . ID  (78)

	ID  shift 147
	.  error


state 125
	sentencia_if_break : IF . PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF  (74)
	sentencia_if_break : IF . PARENT_A condicion PARENT_C THEN bloque_break_continue END_IF  (75)

	PARENT_A  shift 148
	.  error


state 126
	ejecutables_break_continue : BREAK .  (70)
	ejecutables_break_continue : BREAK . cte  (71)

	I32  shift 41
	F32  shift 42
	PUNTOCOMA  reduce 70

	cte  goto 149


state 127
	ejecutables_break_continue : CONTINUE . tag  (69)
	tag : .  (72)

	DOSPUNTOS  shift 150
	PUNTOCOMA  reduce 72

	tag  goto 151


state 128
	sentencia_for : FOR PARENT_A encabezado_for PARENT_C LLAVE_A bloque_break_continue LLAVE_C .  (76)

	.  reduce 76


state 129
	ejecutables_break_continue : asignacion .  (63)

	.  reduce 63


state 130
	ejecutables_break_continue : sentencia_out .  (65)

	.  reduce 65


state 131
	ejecutables_break_continue : sentencia_when .  (66)

	.  reduce 66


state 132
	ejecutables_break_continue : sentencia_for .  (68)

	.  reduce 68


state 133
	ejecutables_break_continue : sentencia_while .  (67)

	.  reduce 67


state 134
	bloque_break_continue : bloque_break_continue ejecutables_break_continue . PUNTOCOMA  (62)

	PUNTOCOMA  shift 152
	.  error


state 135
	ejecutables_break_continue : sentencia_if_break .  (64)

	.  reduce 64


state 136
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable . END_IF  (48)
	bloque_ejecutable : bloque_ejecutable . sentencia_ejecutable PUNTOCOMA  (57)

	IF  shift 6
	END_IF  shift 153
	OUT  shift 7
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 36
	.  error

	sentencia_ejecutable  goto 117
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 137
	bloque_ejecutable : bloque_ejecutable sentencia_ejecutable PUNTOCOMA .  (57)

	.  reduce 57


state 138
	cuerpo_fun : sentencia_declarativa .  (21)

	.  reduce 21


state 139
	bloque_ejecutable_funcion : sentencia_ejecutable . retorno  (22)
	bloque_ejecutable_funcion : sentencia_ejecutable .  (23)

	RETURN  shift 154
	IF  reduce 23
	OUT  reduce 23
	FUN  reduce 23
	WHEN  reduce 23
	WHILE  reduce 23
	FOR  reduce 23
	ID  reduce 23
	LLAVE_C  reduce 23
	CONST  reduce 23

	retorno  goto 155


state 140
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun . LLAVE_C  (15)
	cuerpo_fun : cuerpo_fun . bloque_ejecutable_funcion  (18)
	cuerpo_fun : cuerpo_fun . sentencia_declarativa  (19)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	LLAVE_C  shift 156
	CONST  shift 14
	.  error

	sentencia_declarativa  goto 157
	sentencia_ejecutable  goto 139
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	bloque_ejecutable_funcion  goto 158
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 141
	cuerpo_fun : bloque_ejecutable_funcion .  (20)

	.  reduce 20


state 142
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A . cuerpo_fun LLAVE_C  (14)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	CONST  shift 14
	.  error

	sentencia_declarativa  goto 138
	sentencia_ejecutable  goto 139
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	cuerpo_fun  goto 159
	bloque_ejecutable_funcion  goto 141
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 143
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS . ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	ID  shift 160
	.  error


state 144
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C .  (59)

	.  reduce 59


state 145
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C . LLAVE_A bloque_break_continue LLAVE_C  (60)

	LLAVE_A  shift 161
	.  error


state 146
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA SUMA ID .  (77)

	.  reduce 77


state 147
	encabezado_for : asignacion PUNTOCOMA comparacion PUNTOCOMA RESTA ID .  (78)

	.  reduce 78


state 148
	sentencia_if_break : IF PARENT_A . condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF  (74)
	sentencia_if_break : IF PARENT_A . condicion PARENT_C THEN bloque_break_continue END_IF  (75)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 44
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50
	condicion  goto 162


state 149
	ejecutables_break_continue : BREAK cte .  (71)

	.  reduce 71


state 150
	tag : DOSPUNTOS . ID  (73)

	ID  shift 163
	.  error


state 151
	ejecutables_break_continue : CONTINUE tag .  (69)

	.  reduce 69


state 152
	bloque_break_continue : bloque_break_continue ejecutables_break_continue PUNTOCOMA .  (62)

	.  reduce 62


state 153
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF .  (48)

	.  reduce 48


state 154
	retorno : RETURN . PARENT_A expresion PARENT_C PUNTOCOMA  (16)

	PARENT_A  shift 164
	.  error


state 155
	bloque_ejecutable_funcion : sentencia_ejecutable retorno .  (22)

	.  reduce 22


state 156
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C .  (15)

	.  reduce 15


state 157
	cuerpo_fun : cuerpo_fun sentencia_declarativa .  (19)

	.  reduce 19


state 158
	cuerpo_fun : cuerpo_fun bloque_ejecutable_funcion .  (18)

	.  reduce 18


state 159
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun . LLAVE_C  (14)
	cuerpo_fun : cuerpo_fun . bloque_ejecutable_funcion  (18)
	cuerpo_fun : cuerpo_fun . sentencia_declarativa  (19)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	LLAVE_C  shift 165
	CONST  shift 14
	.  error

	sentencia_declarativa  goto 157
	sentencia_ejecutable  goto 139
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	bloque_ejecutable_funcion  goto 158
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 160
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID . LLAVE_A cuerpo_fun LLAVE_C  (13)

	LLAVE_A  shift 166
	.  error


state 161
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A . bloque_break_continue LLAVE_C  (60)
	bloque_break_continue : .  (61)

	.  reduce 61

	bloque_break_continue  goto 167


state 162
	sentencia_if_break : IF PARENT_A condicion . PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF  (74)
	sentencia_if_break : IF PARENT_A condicion . PARENT_C THEN bloque_break_continue END_IF  (75)

	PARENT_C  shift 168
	.  error


state 163
	tag : DOSPUNTOS ID .  (73)

	.  reduce 73


state 164
	retorno : RETURN PARENT_A . expresion PARENT_C PUNTOCOMA  (16)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 40
	I32  shift 41
	F32  shift 42
	RESTA  shift 43
	.  error

	expresion  goto 169
	sentencia_for  goto 45
	sentencia_while  goto 46
	termino  goto 47
	llamado_func  goto 48
	factor  goto 49
	cte  goto 50


state 165
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C .  (14)

	.  reduce 14


state 166
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A . cuerpo_fun LLAVE_C  (13)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	CONST  shift 14
	.  error

	sentencia_declarativa  goto 138
	sentencia_ejecutable  goto 139
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	cuerpo_fun  goto 170
	bloque_ejecutable_funcion  goto 141
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 167
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue . LLAVE_C  (60)
	bloque_break_continue : bloque_break_continue . ejecutables_break_continue PUNTOCOMA  (62)

	IF  shift 125
	OUT  shift 7
	BREAK  shift 126
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	CONTINUE  shift 127
	ID  shift 36
	LLAVE_C  shift 171
	.  error

	asignacion  goto 129
	sentencia_out  goto 130
	sentencia_when  goto 131
	sentencia_for  goto 132
	sentencia_while  goto 133
	ejecutables_break_continue  goto 134
	sentencia_if_break  goto 135


state 168
	sentencia_if_break : IF PARENT_A condicion PARENT_C . THEN bloque_break_continue ELSE bloque_break_continue END_IF  (74)
	sentencia_if_break : IF PARENT_A condicion PARENT_C . THEN bloque_break_continue END_IF  (75)

	THEN  shift 172
	.  error


state 169
	retorno : RETURN PARENT_A expresion . PARENT_C PUNTOCOMA  (16)
	expresion : expresion . SUMA termino  (34)
	expresion : expresion . RESTA termino  (35)

	PARENT_C  shift 173
	SUMA  shift 68
	RESTA  shift 69
	.  error


state 170
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun . LLAVE_C  (13)
	cuerpo_fun : cuerpo_fun . bloque_ejecutable_funcion  (18)
	cuerpo_fun : cuerpo_fun . sentencia_declarativa  (19)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	LLAVE_C  shift 174
	CONST  shift 14
	.  error

	sentencia_declarativa  goto 157
	sentencia_ejecutable  goto 139
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	bloque_ejecutable_funcion  goto 158
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 171
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C LLAVE_A bloque_break_continue LLAVE_C .  (60)

	.  reduce 60


state 172
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN . bloque_break_continue ELSE bloque_break_continue END_IF  (74)
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN . bloque_break_continue END_IF  (75)
	bloque_break_continue : .  (61)

	.  reduce 61

	bloque_break_continue  goto 175


state 173
	retorno : RETURN PARENT_A expresion PARENT_C . PUNTOCOMA  (16)

	PUNTOCOMA  shift 176
	.  error


state 174
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C .  (13)

	.  reduce 13


state 175
	bloque_break_continue : bloque_break_continue . ejecutables_break_continue PUNTOCOMA  (62)
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue . ELSE bloque_break_continue END_IF  (74)
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue . END_IF  (75)

	IF  shift 125
	ELSE  shift 177
	END_IF  shift 178
	OUT  shift 7
	BREAK  shift 126
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	CONTINUE  shift 127
	ID  shift 36
	.  error

	asignacion  goto 129
	sentencia_out  goto 130
	sentencia_when  goto 131
	sentencia_for  goto 132
	sentencia_while  goto 133
	ejecutables_break_continue  goto 134
	sentencia_if_break  goto 135


state 176
	retorno : RETURN PARENT_A expresion PARENT_C PUNTOCOMA .  (16)

	.  reduce 16


state 177
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE . bloque_break_continue END_IF  (74)
	bloque_break_continue : .  (61)

	.  reduce 61

	bloque_break_continue  goto 179


state 178
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue END_IF .  (75)

	.  reduce 75


state 179
	bloque_break_continue : bloque_break_continue . ejecutables_break_continue PUNTOCOMA  (62)
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue . END_IF  (74)

	IF  shift 125
	END_IF  shift 180
	OUT  shift 7
	BREAK  shift 126
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	CONTINUE  shift 127
	ID  shift 36
	.  error

	asignacion  goto 129
	sentencia_out  goto 130
	sentencia_when  goto 131
	sentencia_for  goto 132
	sentencia_while  goto 133
	ejecutables_break_continue  goto 134
	sentencia_if_break  goto 135


state 180
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF .  (74)

	.  reduce 74


41 terminals, 36 nonterminals
85 grammar rules, 181 states
