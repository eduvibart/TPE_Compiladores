   0  $accept : program $end

   1  program : nombre_program LLAVE_A bloque_sentencias LLAVE_C

   2  nombre_program : ID

   3  bloque_sentencias :
   4                    | bloque_sentencias sentencia PUNTOCOMA

   5  sentencia : sentencia_declarativa
   6            | sentencia_ejecutable

   7  sentencia_declarativa : sentencia_decl_datos
   8                        | sentencia_decl_fun
   9                        | lista_const

  10  sentencia_decl_datos : ID list_var

  11  list_var : list_var COMA ID
  12           | ID

  13  sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C
  14                     | FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C
  15                     | FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C

  16  retorno : RETURN PARENT_A expresion PARENT_C PUNTOCOMA

  17  parametro : ID ID

  18  cuerpo_fun :
  19             | cuerpo_fun bloque_sentencias retorno

  20  lista_const : CONST lista_asignacion

  21  lista_asignacion : lista_asignacion COMA asignacion
  22                   | asignacion

  23  sentencia_ejecutable : asignacion
  24                       | sentencia_if
  25                       | sentencia_out
  26                       | sentencia_when
  27                       | sentencia_for
  28                       | sentencia_while

  29  asignacion : ID ASIG expresion

  30  expresion : expresion SUMA termino
  31            | expresion RESTA termino
  32            | termino
  33            | llamado_func
  34            | sentencia_for ELSE cte
  35            | sentencia_while ELSE cte

  36  termino : termino MULT factor
  37          | termino DIV factor
  38          | factor

  39  factor : RESTA cte
  40         | ID
  41         | cte

  42  cte : I32
  43      | F32

  44  sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF
  45               | IF PARENT_A condicion PARENT_C THEN bloque_ejecutable END_IF

  46  condicion : expresion comparacion expresion

  47  comparacion : IGUAL
  48              | MAYOR
  49              | MENOR
  50              | MENORIGUAL
  51              | MAYORIGUAL

  52  bloque_ejecutable :
  53                    | LLAVE_A bloque_ejecutable sentencia_ejecutable PUNTOCOMA LLAVE_C

  54  sentencia_out : OUT PARENT_A CADENA PARENT_C

  55  sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C

  56  sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue
  57                  | ID DOSPUNTOS WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue

  58  bloque_break_continue :
  59                        | LLAVE_A bloque_break_continue ejecutables_break_continue PUNTOCOMA LLAVE_C

  60  ejecutables_break_continue : asignacion
  61                             | sentencia_if_break
  62                             | sentencia_out
  63                             | sentencia_when
  64                             | sentencia_while
  65                             | sentencia_for
  66                             | CONTINUE tag
  67                             | BREAK
  68                             | BREAK cte

  69  tag :
  70      | DOSPUNTOS ID

  71  sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF
  72                     | IF PARENT_A condicion PARENT_C THEN bloque_break_continue END_IF

  73  sentencia_for : FOR PARENT_A encabezado_for PARENT_C bloque_break_continue
  74                | ID DOSPUNTOS FOR PARENT_A encabezado_for PARENT_C bloque_break_continue

  75  encabezado_for : asignacion PUNTOCOMA condicion PUNTOCOMA SUMA cte
  76                 | asignacion PUNTOCOMA condicion PUNTOCOMA RESTA cte

  77  list_param_real : list_param_real COMA ID
  78                  | list_param_real COMA cte
  79                  | cte
  80                  | ID

  81  llamado_func : ID PARENT_A list_param_real PARENT_C
  82               | ID PARENT_A PARENT_C

state 0
	$accept : . program $end  (0)

	ID  shift 1
	.  error

	program  goto 2
	nombre_program  goto 3


state 1
	nombre_program : ID .  (2)

	.  reduce 2


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	program : nombre_program . LLAVE_A bloque_sentencias LLAVE_C  (1)

	LLAVE_A  shift 4
	.  error


state 4
	program : nombre_program LLAVE_A . bloque_sentencias LLAVE_C  (1)
	bloque_sentencias : .  (3)

	.  reduce 3

	bloque_sentencias  goto 5


state 5
	program : nombre_program LLAVE_A bloque_sentencias . LLAVE_C  (1)
	bloque_sentencias : bloque_sentencias . sentencia PUNTOCOMA  (4)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	LLAVE_C  shift 13
	CONST  shift 14
	.  error

	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 6
	sentencia_if : IF . PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF . PARENT_A condicion PARENT_C THEN bloque_ejecutable END_IF  (45)

	PARENT_A  shift 27
	.  error


state 7
	sentencia_out : OUT . PARENT_A CADENA PARENT_C  (54)

	PARENT_A  shift 28
	.  error


state 8
	sentencia_decl_fun : FUN . ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN . ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)
	sentencia_decl_fun : FUN . ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	ID  shift 29
	.  error


state 9
	sentencia_when : WHEN . PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C  (55)

	PARENT_A  shift 30
	.  error


state 10
	sentencia_while : WHILE . PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (56)

	PARENT_A  shift 31
	.  error


state 11
	sentencia_for : FOR . PARENT_A encabezado_for PARENT_C bloque_break_continue  (73)

	PARENT_A  shift 32
	.  error


state 12
	sentencia_decl_datos : ID . list_var  (10)
	asignacion : ID . ASIG expresion  (29)
	sentencia_while : ID . DOSPUNTOS WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (57)
	sentencia_for : ID . DOSPUNTOS FOR PARENT_A encabezado_for PARENT_C bloque_break_continue  (74)

	ID  shift 33
	DOSPUNTOS  shift 34
	ASIG  shift 35
	.  error

	list_var  goto 36


state 13
	program : nombre_program LLAVE_A bloque_sentencias LLAVE_C .  (1)

	.  reduce 1


state 14
	lista_const : CONST . lista_asignacion  (20)

	ID  shift 37
	.  error

	lista_asignacion  goto 38
	asignacion  goto 39


state 15
	bloque_sentencias : bloque_sentencias sentencia . PUNTOCOMA  (4)

	PUNTOCOMA  shift 40
	.  error


state 16
	sentencia : sentencia_declarativa .  (5)

	.  reduce 5


state 17
	sentencia : sentencia_ejecutable .  (6)

	.  reduce 6


state 18
	sentencia_declarativa : sentencia_decl_datos .  (7)

	.  reduce 7


state 19
	sentencia_declarativa : sentencia_decl_fun .  (8)

	.  reduce 8


state 20
	sentencia_declarativa : lista_const .  (9)

	.  reduce 9


state 21
	sentencia_ejecutable : asignacion .  (23)

	.  reduce 23


state 22
	sentencia_ejecutable : sentencia_if .  (24)

	.  reduce 24


state 23
	sentencia_ejecutable : sentencia_out .  (25)

	.  reduce 25


state 24
	sentencia_ejecutable : sentencia_when .  (26)

	.  reduce 26


state 25
	sentencia_ejecutable : sentencia_for .  (27)

	.  reduce 27


state 26
	sentencia_ejecutable : sentencia_while .  (28)

	.  reduce 28


state 27
	sentencia_if : IF PARENT_A . condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF PARENT_A . condicion PARENT_C THEN bloque_ejecutable END_IF  (45)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 41
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	expresion  goto 45
	sentencia_for  goto 46
	sentencia_while  goto 47
	termino  goto 48
	llamado_func  goto 49
	cte  goto 50
	factor  goto 51
	condicion  goto 52


state 28
	sentencia_out : OUT PARENT_A . CADENA PARENT_C  (54)

	CADENA  shift 53
	.  error


state 29
	sentencia_decl_fun : FUN ID . PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN ID . PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)
	sentencia_decl_fun : FUN ID . PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	PARENT_A  shift 54
	.  error


state 30
	sentencia_when : WHEN PARENT_A . condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C  (55)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 41
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	expresion  goto 45
	sentencia_for  goto 46
	sentencia_while  goto 47
	termino  goto 48
	llamado_func  goto 49
	cte  goto 50
	factor  goto 51
	condicion  goto 55


state 31
	sentencia_while : WHILE PARENT_A . condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (56)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 41
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	expresion  goto 45
	sentencia_for  goto 46
	sentencia_while  goto 47
	termino  goto 48
	llamado_func  goto 49
	cte  goto 50
	factor  goto 51
	condicion  goto 56


state 32
	sentencia_for : FOR PARENT_A . encabezado_for PARENT_C bloque_break_continue  (73)

	ID  shift 37
	.  error

	asignacion  goto 57
	encabezado_for  goto 58


state 33
	list_var : ID .  (12)

	.  reduce 12


state 34
	sentencia_while : ID DOSPUNTOS . WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (57)
	sentencia_for : ID DOSPUNTOS . FOR PARENT_A encabezado_for PARENT_C bloque_break_continue  (74)

	WHILE  shift 59
	FOR  shift 60
	.  error


state 35
	asignacion : ID ASIG . expresion  (29)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 41
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	expresion  goto 61
	sentencia_for  goto 46
	sentencia_while  goto 47
	termino  goto 48
	llamado_func  goto 49
	cte  goto 50
	factor  goto 51


state 36
	sentencia_decl_datos : ID list_var .  (10)
	list_var : list_var . COMA ID  (11)

	COMA  shift 62
	PUNTOCOMA  reduce 10


state 37
	asignacion : ID . ASIG expresion  (29)

	ASIG  shift 35
	.  error


state 38
	lista_const : CONST lista_asignacion .  (20)
	lista_asignacion : lista_asignacion . COMA asignacion  (21)

	COMA  shift 63
	PUNTOCOMA  reduce 20


state 39
	lista_asignacion : asignacion .  (22)

	.  reduce 22


state 40
	bloque_sentencias : bloque_sentencias sentencia PUNTOCOMA .  (4)

	.  reduce 4


state 41
	factor : ID .  (40)
	sentencia_while : ID . DOSPUNTOS WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (57)
	sentencia_for : ID . DOSPUNTOS FOR PARENT_A encabezado_for PARENT_C bloque_break_continue  (74)
	llamado_func : ID . PARENT_A list_param_real PARENT_C  (81)
	llamado_func : ID . PARENT_A PARENT_C  (82)

	PARENT_A  shift 64
	DOSPUNTOS  shift 34
	PARENT_C  reduce 40
	COMA  reduce 40
	PUNTOCOMA  reduce 40
	IGUAL  reduce 40
	MAYOR  reduce 40
	MENOR  reduce 40
	MENORIGUAL  reduce 40
	MAYORIGUAL  reduce 40
	SUMA  reduce 40
	RESTA  reduce 40
	MULT  reduce 40
	DIV  reduce 40


state 42
	cte : I32 .  (42)

	.  reduce 42


state 43
	cte : F32 .  (43)

	.  reduce 43


state 44
	factor : RESTA . cte  (39)

	I32  shift 42
	F32  shift 43
	.  error

	cte  goto 65


state 45
	expresion : expresion . SUMA termino  (30)
	expresion : expresion . RESTA termino  (31)
	condicion : expresion . comparacion expresion  (46)

	IGUAL  shift 66
	MAYOR  shift 67
	MENOR  shift 68
	MENORIGUAL  shift 69
	MAYORIGUAL  shift 70
	SUMA  shift 71
	RESTA  shift 72
	.  error

	comparacion  goto 73


state 46
	expresion : sentencia_for . ELSE cte  (34)

	ELSE  shift 74
	.  error


state 47
	expresion : sentencia_while . ELSE cte  (35)

	ELSE  shift 75
	.  error


state 48
	expresion : termino .  (32)
	termino : termino . MULT factor  (36)
	termino : termino . DIV factor  (37)

	MULT  shift 76
	DIV  shift 77
	PARENT_C  reduce 32
	COMA  reduce 32
	PUNTOCOMA  reduce 32
	IGUAL  reduce 32
	MAYOR  reduce 32
	MENOR  reduce 32
	MENORIGUAL  reduce 32
	MAYORIGUAL  reduce 32
	SUMA  reduce 32
	RESTA  reduce 32


state 49
	expresion : llamado_func .  (33)

	.  reduce 33


state 50
	factor : cte .  (41)

	.  reduce 41


state 51
	termino : factor .  (38)

	.  reduce 38


state 52
	sentencia_if : IF PARENT_A condicion . PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF PARENT_A condicion . PARENT_C THEN bloque_ejecutable END_IF  (45)

	PARENT_C  shift 78
	.  error


state 53
	sentencia_out : OUT PARENT_A CADENA . PARENT_C  (54)

	PARENT_C  shift 79
	.  error


state 54
	sentencia_decl_fun : FUN ID PARENT_A . parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN ID PARENT_A . parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)
	sentencia_decl_fun : FUN ID PARENT_A . PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	ID  shift 80
	PARENT_C  shift 81
	.  error

	parametro  goto 82


state 55
	sentencia_when : WHEN PARENT_A condicion . PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C  (55)

	PARENT_C  shift 83
	.  error


state 56
	sentencia_while : WHILE PARENT_A condicion . PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (56)

	PARENT_C  shift 84
	.  error


state 57
	encabezado_for : asignacion . PUNTOCOMA condicion PUNTOCOMA SUMA cte  (75)
	encabezado_for : asignacion . PUNTOCOMA condicion PUNTOCOMA RESTA cte  (76)

	PUNTOCOMA  shift 85
	.  error


state 58
	sentencia_for : FOR PARENT_A encabezado_for . PARENT_C bloque_break_continue  (73)

	PARENT_C  shift 86
	.  error


state 59
	sentencia_while : ID DOSPUNTOS WHILE . PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (57)

	PARENT_A  shift 87
	.  error


state 60
	sentencia_for : ID DOSPUNTOS FOR . PARENT_A encabezado_for PARENT_C bloque_break_continue  (74)

	PARENT_A  shift 88
	.  error


state 61
	asignacion : ID ASIG expresion .  (29)
	expresion : expresion . SUMA termino  (30)
	expresion : expresion . RESTA termino  (31)

	SUMA  shift 71
	RESTA  shift 72
	PARENT_C  reduce 29
	COMA  reduce 29
	PUNTOCOMA  reduce 29


state 62
	list_var : list_var COMA . ID  (11)

	ID  shift 89
	.  error


state 63
	lista_asignacion : lista_asignacion COMA . asignacion  (21)

	ID  shift 37
	.  error

	asignacion  goto 90


state 64
	llamado_func : ID PARENT_A . list_param_real PARENT_C  (81)
	llamado_func : ID PARENT_A . PARENT_C  (82)

	ID  shift 91
	I32  shift 42
	F32  shift 43
	PARENT_C  shift 92
	.  error

	cte  goto 93
	list_param_real  goto 94


state 65
	factor : RESTA cte .  (39)

	.  reduce 39


state 66
	comparacion : IGUAL .  (47)

	.  reduce 47


state 67
	comparacion : MAYOR .  (48)

	.  reduce 48


state 68
	comparacion : MENOR .  (49)

	.  reduce 49


state 69
	comparacion : MENORIGUAL .  (50)

	.  reduce 50


state 70
	comparacion : MAYORIGUAL .  (51)

	.  reduce 51


state 71
	expresion : expresion SUMA . termino  (30)

	ID  shift 95
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	termino  goto 96
	cte  goto 50
	factor  goto 51


state 72
	expresion : expresion RESTA . termino  (31)

	ID  shift 95
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	termino  goto 97
	cte  goto 50
	factor  goto 51


state 73
	condicion : expresion comparacion . expresion  (46)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 41
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	expresion  goto 98
	sentencia_for  goto 46
	sentencia_while  goto 47
	termino  goto 48
	llamado_func  goto 49
	cte  goto 50
	factor  goto 51


state 74
	expresion : sentencia_for ELSE . cte  (34)

	I32  shift 42
	F32  shift 43
	.  error

	cte  goto 99


state 75
	expresion : sentencia_while ELSE . cte  (35)

	I32  shift 42
	F32  shift 43
	.  error

	cte  goto 100


state 76
	termino : termino MULT . factor  (36)

	ID  shift 95
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	cte  goto 50
	factor  goto 101


state 77
	termino : termino DIV . factor  (37)

	ID  shift 95
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	cte  goto 50
	factor  goto 102


state 78
	sentencia_if : IF PARENT_A condicion PARENT_C . THEN bloque_ejecutable ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF PARENT_A condicion PARENT_C . THEN bloque_ejecutable END_IF  (45)

	THEN  shift 103
	.  error


state 79
	sentencia_out : OUT PARENT_A CADENA PARENT_C .  (54)

	.  reduce 54


state 80
	parametro : ID . ID  (17)

	ID  shift 104
	.  error


state 81
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C . DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	DOSPUNTOS  shift 105
	.  error


state 82
	sentencia_decl_fun : FUN ID PARENT_A parametro . COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)
	sentencia_decl_fun : FUN ID PARENT_A parametro . PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)

	PARENT_C  shift 106
	COMA  shift 107
	.  error


state 83
	sentencia_when : WHEN PARENT_A condicion PARENT_C . THEN LLAVE_A bloque_sentencias LLAVE_C  (55)

	THEN  shift 108
	.  error


state 84
	sentencia_while : WHILE PARENT_A condicion PARENT_C . DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (56)

	DOSPUNTOS  shift 109
	.  error


state 85
	encabezado_for : asignacion PUNTOCOMA . condicion PUNTOCOMA SUMA cte  (75)
	encabezado_for : asignacion PUNTOCOMA . condicion PUNTOCOMA RESTA cte  (76)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 41
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	expresion  goto 45
	sentencia_for  goto 46
	sentencia_while  goto 47
	termino  goto 48
	llamado_func  goto 49
	cte  goto 50
	factor  goto 51
	condicion  goto 110


state 86
	sentencia_for : FOR PARENT_A encabezado_for PARENT_C . bloque_break_continue  (73)
	bloque_break_continue : .  (58)

	LLAVE_A  shift 111
	ELSE  reduce 58
	PUNTOCOMA  reduce 58

	bloque_break_continue  goto 112


state 87
	sentencia_while : ID DOSPUNTOS WHILE PARENT_A . condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (57)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 41
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	expresion  goto 45
	sentencia_for  goto 46
	sentencia_while  goto 47
	termino  goto 48
	llamado_func  goto 49
	cte  goto 50
	factor  goto 51
	condicion  goto 113


state 88
	sentencia_for : ID DOSPUNTOS FOR PARENT_A . encabezado_for PARENT_C bloque_break_continue  (74)

	ID  shift 37
	.  error

	asignacion  goto 57
	encabezado_for  goto 114


state 89
	list_var : list_var COMA ID .  (11)

	.  reduce 11


state 90
	lista_asignacion : lista_asignacion COMA asignacion .  (21)

	.  reduce 21


state 91
	list_param_real : ID .  (80)

	.  reduce 80


state 92
	llamado_func : ID PARENT_A PARENT_C .  (82)

	.  reduce 82


state 93
	list_param_real : cte .  (79)

	.  reduce 79


state 94
	list_param_real : list_param_real . COMA ID  (77)
	list_param_real : list_param_real . COMA cte  (78)
	llamado_func : ID PARENT_A list_param_real . PARENT_C  (81)

	PARENT_C  shift 115
	COMA  shift 116
	.  error


state 95
	factor : ID .  (40)

	.  reduce 40


state 96
	expresion : expresion SUMA termino .  (30)
	termino : termino . MULT factor  (36)
	termino : termino . DIV factor  (37)

	MULT  shift 76
	DIV  shift 77
	PARENT_C  reduce 30
	COMA  reduce 30
	PUNTOCOMA  reduce 30
	IGUAL  reduce 30
	MAYOR  reduce 30
	MENOR  reduce 30
	MENORIGUAL  reduce 30
	MAYORIGUAL  reduce 30
	SUMA  reduce 30
	RESTA  reduce 30


state 97
	expresion : expresion RESTA termino .  (31)
	termino : termino . MULT factor  (36)
	termino : termino . DIV factor  (37)

	MULT  shift 76
	DIV  shift 77
	PARENT_C  reduce 31
	COMA  reduce 31
	PUNTOCOMA  reduce 31
	IGUAL  reduce 31
	MAYOR  reduce 31
	MENOR  reduce 31
	MENORIGUAL  reduce 31
	MAYORIGUAL  reduce 31
	SUMA  reduce 31
	RESTA  reduce 31


state 98
	expresion : expresion . SUMA termino  (30)
	expresion : expresion . RESTA termino  (31)
	condicion : expresion comparacion expresion .  (46)

	SUMA  shift 71
	RESTA  shift 72
	PARENT_C  reduce 46
	PUNTOCOMA  reduce 46


state 99
	expresion : sentencia_for ELSE cte .  (34)

	.  reduce 34


state 100
	expresion : sentencia_while ELSE cte .  (35)

	.  reduce 35


state 101
	termino : termino MULT factor .  (36)

	.  reduce 36


state 102
	termino : termino DIV factor .  (37)

	.  reduce 37


state 103
	sentencia_if : IF PARENT_A condicion PARENT_C THEN . bloque_ejecutable ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF PARENT_A condicion PARENT_C THEN . bloque_ejecutable END_IF  (45)
	bloque_ejecutable : .  (52)

	LLAVE_A  shift 117
	ELSE  reduce 52
	END_IF  reduce 52

	bloque_ejecutable  goto 118


state 104
	parametro : ID ID .  (17)

	.  reduce 17


state 105
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS . ID LLAVE_A cuerpo_fun LLAVE_C  (15)

	ID  shift 119
	.  error


state 106
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C . DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (14)

	DOSPUNTOS  shift 120
	.  error


state 107
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA . parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	ID  shift 80
	.  error

	parametro  goto 121


state 108
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN . LLAVE_A bloque_sentencias LLAVE_C  (55)

	LLAVE_A  shift 122
	.  error


state 109
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS . PARENT_A asignacion PARENT_C bloque_break_continue  (56)

	PARENT_A  shift 123
	.  error


state 110
	encabezado_for : asignacion PUNTOCOMA condicion . PUNTOCOMA SUMA cte  (75)
	encabezado_for : asignacion PUNTOCOMA condicion . PUNTOCOMA RESTA cte  (76)

	PUNTOCOMA  shift 124
	.  error


state 111
	bloque_break_continue : LLAVE_A . bloque_break_continue ejecutables_break_continue PUNTOCOMA LLAVE_C  (59)
	bloque_break_continue : .  (58)

	LLAVE_A  shift 111
	IF  reduce 58
	OUT  reduce 58
	BREAK  reduce 58
	WHEN  reduce 58
	WHILE  reduce 58
	FOR  reduce 58
	CONTINUE  reduce 58
	ID  reduce 58

	bloque_break_continue  goto 125


state 112
	sentencia_for : FOR PARENT_A encabezado_for PARENT_C bloque_break_continue .  (73)

	.  reduce 73


state 113
	sentencia_while : ID DOSPUNTOS WHILE PARENT_A condicion . PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (57)

	PARENT_C  shift 126
	.  error


state 114
	sentencia_for : ID DOSPUNTOS FOR PARENT_A encabezado_for . PARENT_C bloque_break_continue  (74)

	PARENT_C  shift 127
	.  error


state 115
	llamado_func : ID PARENT_A list_param_real PARENT_C .  (81)

	.  reduce 81


state 116
	list_param_real : list_param_real COMA . ID  (77)
	list_param_real : list_param_real COMA . cte  (78)

	ID  shift 128
	I32  shift 42
	F32  shift 43
	.  error

	cte  goto 129


state 117
	bloque_ejecutable : LLAVE_A . bloque_ejecutable sentencia_ejecutable PUNTOCOMA LLAVE_C  (53)
	bloque_ejecutable : .  (52)

	LLAVE_A  shift 117
	IF  reduce 52
	OUT  reduce 52
	WHEN  reduce 52
	WHILE  reduce 52
	FOR  reduce 52
	ID  reduce 52

	bloque_ejecutable  goto 130


state 118
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable . ELSE bloque_ejecutable END_IF  (44)
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable . END_IF  (45)

	ELSE  shift 131
	END_IF  shift 132
	.  error


state 119
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID . LLAVE_A cuerpo_fun LLAVE_C  (15)

	LLAVE_A  shift 133
	.  error


state 120
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS . ID LLAVE_A cuerpo_fun LLAVE_C  (14)

	ID  shift 134
	.  error


state 121
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro . PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	PARENT_C  shift 135
	.  error


state 122
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A . bloque_sentencias LLAVE_C  (55)
	bloque_sentencias : .  (3)

	.  reduce 3

	bloque_sentencias  goto 136


state 123
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A . asignacion PARENT_C bloque_break_continue  (56)

	ID  shift 37
	.  error

	asignacion  goto 137


state 124
	encabezado_for : asignacion PUNTOCOMA condicion PUNTOCOMA . SUMA cte  (75)
	encabezado_for : asignacion PUNTOCOMA condicion PUNTOCOMA . RESTA cte  (76)

	SUMA  shift 138
	RESTA  shift 139
	.  error


state 125
	bloque_break_continue : LLAVE_A bloque_break_continue . ejecutables_break_continue PUNTOCOMA LLAVE_C  (59)

	IF  shift 140
	OUT  shift 7
	BREAK  shift 141
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	CONTINUE  shift 142
	ID  shift 143
	.  error

	asignacion  goto 144
	sentencia_out  goto 145
	sentencia_when  goto 146
	sentencia_for  goto 147
	sentencia_while  goto 148
	ejecutables_break_continue  goto 149
	sentencia_if_break  goto 150


state 126
	sentencia_while : ID DOSPUNTOS WHILE PARENT_A condicion PARENT_C . DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (57)

	DOSPUNTOS  shift 151
	.  error


state 127
	sentencia_for : ID DOSPUNTOS FOR PARENT_A encabezado_for PARENT_C . bloque_break_continue  (74)
	bloque_break_continue : .  (58)

	LLAVE_A  shift 111
	ELSE  reduce 58
	PUNTOCOMA  reduce 58

	bloque_break_continue  goto 152


state 128
	list_param_real : list_param_real COMA ID .  (77)

	.  reduce 77


state 129
	list_param_real : list_param_real COMA cte .  (78)

	.  reduce 78


state 130
	bloque_ejecutable : LLAVE_A bloque_ejecutable . sentencia_ejecutable PUNTOCOMA LLAVE_C  (53)

	IF  shift 6
	OUT  shift 7
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 143
	.  error

	sentencia_ejecutable  goto 153
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 131
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE . bloque_ejecutable END_IF  (44)
	bloque_ejecutable : .  (52)

	LLAVE_A  shift 117
	END_IF  reduce 52

	bloque_ejecutable  goto 154


state 132
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable END_IF .  (45)

	.  reduce 45


state 133
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A . cuerpo_fun LLAVE_C  (15)
	cuerpo_fun : .  (18)

	.  reduce 18

	cuerpo_fun  goto 155


state 134
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID . LLAVE_A cuerpo_fun LLAVE_C  (14)

	LLAVE_A  shift 156
	.  error


state 135
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C . DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	DOSPUNTOS  shift 157
	.  error


state 136
	bloque_sentencias : bloque_sentencias . sentencia PUNTOCOMA  (4)
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias . LLAVE_C  (55)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	LLAVE_C  shift 158
	CONST  shift 14
	.  error

	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 137
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion . PARENT_C bloque_break_continue  (56)

	PARENT_C  shift 159
	.  error


state 138
	encabezado_for : asignacion PUNTOCOMA condicion PUNTOCOMA SUMA . cte  (75)

	I32  shift 42
	F32  shift 43
	.  error

	cte  goto 160


state 139
	encabezado_for : asignacion PUNTOCOMA condicion PUNTOCOMA RESTA . cte  (76)

	I32  shift 42
	F32  shift 43
	.  error

	cte  goto 161


state 140
	sentencia_if_break : IF . PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF  (71)
	sentencia_if_break : IF . PARENT_A condicion PARENT_C THEN bloque_break_continue END_IF  (72)

	PARENT_A  shift 162
	.  error


state 141
	ejecutables_break_continue : BREAK .  (67)
	ejecutables_break_continue : BREAK . cte  (68)

	I32  shift 42
	F32  shift 43
	PUNTOCOMA  reduce 67

	cte  goto 163


state 142
	ejecutables_break_continue : CONTINUE . tag  (66)
	tag : .  (69)

	DOSPUNTOS  shift 164
	PUNTOCOMA  reduce 69

	tag  goto 165


state 143
	asignacion : ID . ASIG expresion  (29)
	sentencia_while : ID . DOSPUNTOS WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue  (57)
	sentencia_for : ID . DOSPUNTOS FOR PARENT_A encabezado_for PARENT_C bloque_break_continue  (74)

	DOSPUNTOS  shift 34
	ASIG  shift 35
	.  error


state 144
	ejecutables_break_continue : asignacion .  (60)

	.  reduce 60


state 145
	ejecutables_break_continue : sentencia_out .  (62)

	.  reduce 62


state 146
	ejecutables_break_continue : sentencia_when .  (63)

	.  reduce 63


state 147
	ejecutables_break_continue : sentencia_for .  (65)

	.  reduce 65


state 148
	ejecutables_break_continue : sentencia_while .  (64)

	.  reduce 64


state 149
	bloque_break_continue : LLAVE_A bloque_break_continue ejecutables_break_continue . PUNTOCOMA LLAVE_C  (59)

	PUNTOCOMA  shift 166
	.  error


state 150
	ejecutables_break_continue : sentencia_if_break .  (61)

	.  reduce 61


state 151
	sentencia_while : ID DOSPUNTOS WHILE PARENT_A condicion PARENT_C DOSPUNTOS . PARENT_A asignacion PARENT_C bloque_break_continue  (57)

	PARENT_A  shift 167
	.  error


state 152
	sentencia_for : ID DOSPUNTOS FOR PARENT_A encabezado_for PARENT_C bloque_break_continue .  (74)

	.  reduce 74


state 153
	bloque_ejecutable : LLAVE_A bloque_ejecutable sentencia_ejecutable . PUNTOCOMA LLAVE_C  (53)

	PUNTOCOMA  shift 168
	.  error


state 154
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable . END_IF  (44)

	END_IF  shift 169
	.  error


state 155
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun . LLAVE_C  (15)
	cuerpo_fun : cuerpo_fun . bloque_sentencias retorno  (19)
	bloque_sentencias : .  (3)

	LLAVE_C  shift 170
	IF  reduce 3
	OUT  reduce 3
	FUN  reduce 3
	RETURN  reduce 3
	WHEN  reduce 3
	WHILE  reduce 3
	FOR  reduce 3
	ID  reduce 3
	CONST  reduce 3

	bloque_sentencias  goto 171


state 156
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A . cuerpo_fun LLAVE_C  (14)
	cuerpo_fun : .  (18)

	.  reduce 18

	cuerpo_fun  goto 172


state 157
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS . ID LLAVE_A cuerpo_fun LLAVE_C  (13)

	ID  shift 173
	.  error


state 158
	sentencia_when : WHEN PARENT_A condicion PARENT_C THEN LLAVE_A bloque_sentencias LLAVE_C .  (55)

	.  reduce 55


state 159
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C . bloque_break_continue  (56)
	bloque_break_continue : .  (58)

	LLAVE_A  shift 111
	ELSE  reduce 58
	PUNTOCOMA  reduce 58

	bloque_break_continue  goto 174


state 160
	encabezado_for : asignacion PUNTOCOMA condicion PUNTOCOMA SUMA cte .  (75)

	.  reduce 75


state 161
	encabezado_for : asignacion PUNTOCOMA condicion PUNTOCOMA RESTA cte .  (76)

	.  reduce 76


state 162
	sentencia_if_break : IF PARENT_A . condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF  (71)
	sentencia_if_break : IF PARENT_A . condicion PARENT_C THEN bloque_break_continue END_IF  (72)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 41
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	expresion  goto 45
	sentencia_for  goto 46
	sentencia_while  goto 47
	termino  goto 48
	llamado_func  goto 49
	cte  goto 50
	factor  goto 51
	condicion  goto 175


state 163
	ejecutables_break_continue : BREAK cte .  (68)

	.  reduce 68


state 164
	tag : DOSPUNTOS . ID  (70)

	ID  shift 176
	.  error


state 165
	ejecutables_break_continue : CONTINUE tag .  (66)

	.  reduce 66


state 166
	bloque_break_continue : LLAVE_A bloque_break_continue ejecutables_break_continue PUNTOCOMA . LLAVE_C  (59)

	LLAVE_C  shift 177
	.  error


state 167
	sentencia_while : ID DOSPUNTOS WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A . asignacion PARENT_C bloque_break_continue  (57)

	ID  shift 37
	.  error

	asignacion  goto 178


state 168
	bloque_ejecutable : LLAVE_A bloque_ejecutable sentencia_ejecutable PUNTOCOMA . LLAVE_C  (53)

	LLAVE_C  shift 179
	.  error


state 169
	sentencia_if : IF PARENT_A condicion PARENT_C THEN bloque_ejecutable ELSE bloque_ejecutable END_IF .  (44)

	.  reduce 44


state 170
	sentencia_decl_fun : FUN ID PARENT_A PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C .  (15)

	.  reduce 15


state 171
	bloque_sentencias : bloque_sentencias . sentencia PUNTOCOMA  (4)
	cuerpo_fun : cuerpo_fun bloque_sentencias . retorno  (19)

	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	RETURN  shift 180
	WHEN  shift 9
	WHILE  shift 10
	FOR  shift 11
	ID  shift 12
	CONST  shift 14
	.  error

	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	sentencia_decl_datos  goto 18
	sentencia_decl_fun  goto 19
	lista_const  goto 20
	retorno  goto 181
	asignacion  goto 21
	sentencia_if  goto 22
	sentencia_out  goto 23
	sentencia_when  goto 24
	sentencia_for  goto 25
	sentencia_while  goto 26


state 172
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun . LLAVE_C  (14)
	cuerpo_fun : cuerpo_fun . bloque_sentencias retorno  (19)
	bloque_sentencias : .  (3)

	LLAVE_C  shift 182
	IF  reduce 3
	OUT  reduce 3
	FUN  reduce 3
	RETURN  reduce 3
	WHEN  reduce 3
	WHILE  reduce 3
	FOR  reduce 3
	ID  reduce 3
	CONST  reduce 3

	bloque_sentencias  goto 171


state 173
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID . LLAVE_A cuerpo_fun LLAVE_C  (13)

	LLAVE_A  shift 183
	.  error


state 174
	sentencia_while : WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue .  (56)

	.  reduce 56


state 175
	sentencia_if_break : IF PARENT_A condicion . PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF  (71)
	sentencia_if_break : IF PARENT_A condicion . PARENT_C THEN bloque_break_continue END_IF  (72)

	PARENT_C  shift 184
	.  error


state 176
	tag : DOSPUNTOS ID .  (70)

	.  reduce 70


state 177
	bloque_break_continue : LLAVE_A bloque_break_continue ejecutables_break_continue PUNTOCOMA LLAVE_C .  (59)

	.  reduce 59


state 178
	sentencia_while : ID DOSPUNTOS WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion . PARENT_C bloque_break_continue  (57)

	PARENT_C  shift 185
	.  error


state 179
	bloque_ejecutable : LLAVE_A bloque_ejecutable sentencia_ejecutable PUNTOCOMA LLAVE_C .  (53)

	.  reduce 53


state 180
	retorno : RETURN . PARENT_A expresion PARENT_C PUNTOCOMA  (16)

	PARENT_A  shift 186
	.  error


state 181
	cuerpo_fun : cuerpo_fun bloque_sentencias retorno .  (19)

	.  reduce 19


state 182
	sentencia_decl_fun : FUN ID PARENT_A parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C .  (14)

	.  reduce 14


state 183
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A . cuerpo_fun LLAVE_C  (13)
	cuerpo_fun : .  (18)

	.  reduce 18

	cuerpo_fun  goto 187


state 184
	sentencia_if_break : IF PARENT_A condicion PARENT_C . THEN bloque_break_continue ELSE bloque_break_continue END_IF  (71)
	sentencia_if_break : IF PARENT_A condicion PARENT_C . THEN bloque_break_continue END_IF  (72)

	THEN  shift 188
	.  error


state 185
	sentencia_while : ID DOSPUNTOS WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C . bloque_break_continue  (57)
	bloque_break_continue : .  (58)

	LLAVE_A  shift 111
	ELSE  reduce 58
	PUNTOCOMA  reduce 58

	bloque_break_continue  goto 189


state 186
	retorno : RETURN PARENT_A . expresion PARENT_C PUNTOCOMA  (16)

	WHILE  shift 10
	FOR  shift 11
	ID  shift 41
	I32  shift 42
	F32  shift 43
	RESTA  shift 44
	.  error

	expresion  goto 190
	sentencia_for  goto 46
	sentencia_while  goto 47
	termino  goto 48
	llamado_func  goto 49
	cte  goto 50
	factor  goto 51


state 187
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun . LLAVE_C  (13)
	cuerpo_fun : cuerpo_fun . bloque_sentencias retorno  (19)
	bloque_sentencias : .  (3)

	LLAVE_C  shift 191
	IF  reduce 3
	OUT  reduce 3
	FUN  reduce 3
	RETURN  reduce 3
	WHEN  reduce 3
	WHILE  reduce 3
	FOR  reduce 3
	ID  reduce 3
	CONST  reduce 3

	bloque_sentencias  goto 171


state 188
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN . bloque_break_continue ELSE bloque_break_continue END_IF  (71)
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN . bloque_break_continue END_IF  (72)
	bloque_break_continue : .  (58)

	LLAVE_A  shift 111
	ELSE  reduce 58
	END_IF  reduce 58

	bloque_break_continue  goto 192


state 189
	sentencia_while : ID DOSPUNTOS WHILE PARENT_A condicion PARENT_C DOSPUNTOS PARENT_A asignacion PARENT_C bloque_break_continue .  (57)

	.  reduce 57


state 190
	retorno : RETURN PARENT_A expresion . PARENT_C PUNTOCOMA  (16)
	expresion : expresion . SUMA termino  (30)
	expresion : expresion . RESTA termino  (31)

	PARENT_C  shift 193
	SUMA  shift 71
	RESTA  shift 72
	.  error


state 191
	sentencia_decl_fun : FUN ID PARENT_A parametro COMA parametro PARENT_C DOSPUNTOS ID LLAVE_A cuerpo_fun LLAVE_C .  (13)

	.  reduce 13


state 192
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue . ELSE bloque_break_continue END_IF  (71)
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue . END_IF  (72)

	ELSE  shift 194
	END_IF  shift 195
	.  error


state 193
	retorno : RETURN PARENT_A expresion PARENT_C . PUNTOCOMA  (16)

	PUNTOCOMA  shift 196
	.  error


state 194
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE . bloque_break_continue END_IF  (71)
	bloque_break_continue : .  (58)

	LLAVE_A  shift 111
	END_IF  reduce 58

	bloque_break_continue  goto 197


state 195
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue END_IF .  (72)

	.  reduce 72


state 196
	retorno : RETURN PARENT_A expresion PARENT_C PUNTOCOMA .  (16)

	.  reduce 16


state 197
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue . END_IF  (71)

	END_IF  shift 198
	.  error


state 198
	sentencia_if_break : IF PARENT_A condicion PARENT_C THEN bloque_break_continue ELSE bloque_break_continue END_IF .  (71)

	.  reduce 71


41 terminals, 35 nonterminals
83 grammar rules, 199 states
